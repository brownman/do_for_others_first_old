#!/bin/bash  
reset
go_home(){
    if [ $0 = 'bash' ];then
            echo returning
                return 1
            else
                    echo exiting
                        exit 1
                    fi
                }


trap_err(){
echo '[ trapping ERR ]'
set +o nounset
}
trap trap_err ERR
set -o nounset

shopt -s expand_aliases
proxy(){
    local var_debug=${DEBUG:-true}
    local args=( "$@" )
    cmd="${args[@]}"
    if [ "$var_debug" = true ];then
        echo "[ proxy ]  [  $cmd  ] "
    fi
    echo "$cmd" >> /tmp/proxy

    (     eval "$cmd" 2>/tmp/err )
    local     res=$?
    if [ "$res" -ne  0 ];then
        
        echo '[ERROR]'     
    # type present_file 1>/dev/null  &&  { proxy  present_file /tmp/err ;} || {  cat /tmp/err; }
    cat /tmp/err
    fi
    #sleep 1

}


start(){
    proxy echo 'delete logs'
    echo -n '' > /tmp/proxy
}
finish(){
    cat -n /tmp/proxy
}
exports(){
    echo 'remind: run vi + use ctrl+o'
    export dir_tmp=/tmp
    
#    proxy export dir_library=$dir_root/LIBRARY
    proxy export dir_library=~/JAIL/TREE/3_ROUTES/ALL/LIBRARY
    #/cfg/breathing
    if [ -d "$dir_library" ];then
    echo 'loading from dir_library'
    proxy source $dir_library/cfg/breathing/vars.cfg
    proxy source $dir_library/cfg/breathing/exports.cfg
else
    echo 'dir_library is un-known'
fi





#    proxy export dir_workspace=$dir_root/WORKSPACE
    proxy export dir_remind=$dir_workspace/remind
   proxy  export file1=$dir_remind/self_measure.txt
proxy export     file2=$dir_remind/priority.txt
proxy export     file3=$dir_remind/hotkeys.txt
go_home
}
aliases(){
    proxy "alias breath=$dir_root/breath.cfg"
    proxy "alias cd_library=cd $dir_library"
}
vars(){
    export delay=2
    export DEBUG=true
}
#alias add_to_clipboard="pwd | xsel --clipboard"

funcs(){
    #bypassing instead of :
    #use breathing.present_file.cfg
    proxy source $dir_library/cfg/breathing/present_file.cfg

    #    source $dir_library/cfg/breathing/proxy.cfg
}
delegate(){
    proxy source $dir_library/pre_loading_library.cfg
    proxy source $dir_library/library.cfg
}


traps(){

    proxy trap handler SIGINT
}
handler(){
    echo '[ update clipboard ]'
    echo -n '[CMD] '
    echo "$cmd"
    echo "$cmd" | xsel --clipboard
    break
}
loop(){
    files=`ls $dir_workspace/remind/*.txt`
    for file in $files;do
        proxy present_file $file 
    done

}

steps(){
    #depend: proxy()


################## setting trap handler for an error
    proxy traps
################## reset logger
    proxy start
################## set vars: ( time / mode:debug/else )
    proxy vars

################## source: library.cfg --> then we can load  through func: use()
    proxy exports

################## test: library is active
    proxy funcs
################## alias: for quick editing this file
    proxy aliases


#    proxy loop
#    proxy delegate
proxy export -f go_home
proxy export -f proxy
proxy export -f trap_err
######################## print logger
    proxy finish
}

if [ $0 = bash ];then
    echo -n '[ready]  '
#    echo    'source $dir_root/breath.cfg'
    steps
else

    echo -n '[ready]  '
    echo    'run $dir_root/breath.cfg'
    steps
fi


set +o nounset
