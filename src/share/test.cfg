check_depend_process(){
    print_func
    ########################### test if gmail-notify is running ##########\
        local process=`pull check_depend_process`

cmd="ps -ef | grep $process | grep -v grep"
    str=`eval "$cmd"`

    [ -z "$str" ] && { echo >&2 "Please Run: $process" ;exiting; }


}

check_depend_package(){

    print_func

    ########################## install dependencies ######################\   
    list=`pull check_depend_package`
    print_color 32 "dependencies: "
    echo "LIST:$list"

    for item in $list;do
        cmd="dpkg -L $item"
        eval "$cmd" >/dev/null 2>&1 || { echo "Please Run: sudo apt-get install $item" >&2;exiting; }
    done
}

check_depend_config(){
    print_func

    

    ########################### test if the user update the default configurations ##########\

    list=`pull check_depend_config`
    print_color 32 "configure:"
    echo "LIST:$list"

    for item in $list;do
        #cmd="dpkg -L $item"
        #eval "$cmd" >/dev/null 2>&1 || { echo "Please Run: sudo apt-get install $item" >&2;exiting; }
#        echo "user: $user"
somevar=`echo \\$"$item"`
#echo "somevar: $somevar"
res=`eval echo $somevar`
#echo "res:-$res-"
#echo "item:$item:-$res-"
        [ "$res" = '' ] && { echo -e  "Open: vars.cfg\nEdit variable: $item" >&2;exiting; }
    done

}



pull(){
    print_func
    subject="$1"
    cmd="cat $0 | grep $subject:"
    #trace "cmd: $cmd"

    str=`eval "$cmd"`
    if [ "$str" ];then
        str1=`echo "$str" | cut -d':' -f2`
        remove_trailing "$str1"
    else
        reason_of_death 'no such subject:' "$subject"
    fi

}
expose(){
    print_func
    subject="$1"
    print_color 33 "subject: $subject:\t\t"
    pull "$subject"
}

information(){
    print_func

    expose plugin
    expose describe
}



export -f check_depend_package
export -f check_depend_process
export -f check_depend_config


export -f information
export -f pull
export -f expose 


