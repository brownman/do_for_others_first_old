show_file(){


    #local    subject="$1"
    #local file_name=$(get_file_name txt $subject)
    #echo "file name: $file_name"
    file="$1"
    if [ "$file"  ];then
        $(messageYN1 'edit file ?' 'show_file' '-iconic' )
        answer=$?

        if [[ $answer -eq 1 ]];then
            (gedit $file &)
            trace ''
        else
            trace 'skip editing'
        fi
    fi
    echo "$file"


}
update_recent_link(){

    local dir_target=$LINKS_DIR

    local dir_source=$1


    local file_name=$(input_grep $dir_source)

    if [ "$file_name" ];
    then
        local source="$dir_source/$file_name"
        local target="$dir_target/$file_name_target"

        trace "creating symlink for: $file_name"
        sleep 3


        create_sym_link "$source" "$target" 
    else

        #assert_equal_str "$file_name"

        notify_send3 "skip" 
    fi



}

create_sym_link(){

    #local str="$1"
    #local dir_target="$1"
    #local ="$1"
    local target=$2
    #1dir_target/$str
    local source=$1
    #dir_source/$str 

    ln -sf $source $target
    ls -l $target
    cat $target | head -10
}

input_grep(){
    local dir="$1"
    local   grep_for=$(gxmessage "grep for:" -entry $GXMESSAGET)
    local file_name=$(list_dir2 $dir "$grep_for") #true-use grep
    echo "$file_name"
}


list_dir2(){
    local dir="$1" #script/time
    local grep_for="$2" #script/time

    local file_tmp=/tmp/list
    local res=$(ls -1 $dir | grep "$grep_for")
    echo "$res" > $file_tmp 

    local ans2=$(zenity1 $file_tmp )
    echo "$ans2"


}

list_dir(){
    local dir="$1" #script/time
    local title="$2"
    local text="$3"
    local grep=${4:-false}

    local file_tmp=/tmp/list
    #newer=,csrecent_koan.py
    local ans1=''
    local ans2=''
    local res=''


    #local str="$1"
    if [ "$grep" = true ];then
        ans1=$(gxmessage "grep for:" -entry)
    fi


    #list dir 
    res=$(ls -1 $dir | grep "$ans1")
    echo "$res" > $file_tmp 


    #echo "$res"
    #ans=$(gxmessage "$res" -entrytext "$ans1" )
    ans2=$(zenity1 $file_tmp "$title" "$text")
    echo "$ans2"


}
generate_file(){
    #gxmessage $GXMESSAGET  'generate file'
    #sleep1 10
    local name=$1
    local type=$2
    local file=$DATA_DIR/${type}/$name.${type}
    #assert_equal_str $file

    touch $file
    echo "$file"
}
update_file(){
    trace "update_file got: file: $1 | msg: $2 | $3"
    local file=${1:-'/tmp/2.txt'}
    is_valid $file
    local res=$?

    local msg="$2"
    if [ $res -eq 1 ] || [ $res -eq 3 ] || [ $res -eq 4 ];then



        cat $file > /tmp/1.txt 
        echo "$msg" > $file
        cat /tmp/1.txt >> $file

        optional1 "gedit $file" "gedit $file" 'question' 
    else
        #notify_send3 "update_file :$file :  error"
        local msg="file error: $file"

#      assertEqual 1 2

      eval  breakpoint "$msg"

    fi



}


choose_line1(){

    #notify_send "$*"  "$0" 
    local subject="$1"
    local title="$2"
    local text="$3"
    local file=$(get_filename 'txt' $subject )
    #notify_send $file
    local line=$(zenity1 $file "$title" "$text")
    #local line=$(pick_line $file)
    echo "$line"
}



get_filename(){
    #breakpoint
    #notify_send "$*"  "$0" 
    local type="$1"

    #gxmessage  "$type" $GXMESSAGET
    local subject="$2"
    local file=''
    local file="$DATA_DIR/${type}/${subject}.${type}"

    echo "$file"
}

pick_file2(){
    local dir=$1
    local    file_list=/tmp/list1
    list=$(ls -1 $dir)
    echo "$list" > $file_list
    local item=$( zenity1 "$file_list" )

    local choose="$dir/$item"
    #xdg-open $choose
    echo  "$choose"
}
pick_file(){
    local dir="$1"
    if [ -d "$dir" ];then

zenity --file-selection $dir --timeout $TIMEOUT_ZENITY
else
    trace 'invalid dir'
    fi

}

clean_file(){
    notify_send1 'config' 'clean_file'
    show_file "$file"
    local file=$1
    is_valid $file
    local res=$?
    if [ $res -eq 1 ];then

        echo '' > $file
    fi

}

show_file(){
    local file=$1
    is_valid $file
    local res=$?
    if [ $res -eq 1 ];then
        gxmessage $GXMESSAGET -file "$file" -title 'config: show_file'
    fi

}
export -f show_file 
export -f clean_file 
export -f pick_file 
export -f choose_line1
export -f get_filename
#export -f generate_line 
export -f generate_file 
export -f update_file 
#export -f list_dir
export -f list_dir2
export -f input_grep 
export -f create_sym_link 
export -f update_recent_link 

export -f show_file


