#!/bin/bash
#info: load the library
#depend: dir_library
#proxy + print_func_n

shopt -s expand_aliases
set -o nounset
export max_res=2
load(){
#    source $dir_library
    source $dir_library/cfg/public/color/color.cfg
#    /home/dao04/JAIL/TREE/LIBRARY/CODE/0.0.2/src/cfg/share/color.cfg
    }

#proxy export dir_tmp_lib=$dir_library/src/rc/tmp
#export dir_breathing=$dir_library/cfg/breathing
#source $dir_breathing/helper.cfg
#export file_aliases=$dir_tmp_lib/aliase_dynamic.cfg
#[ -f $file_aliases ] && rm $file_aliases
proxy(){
    local args=( "$@" )
    local cmd="${args[@]}"
    local base=`basename $0`
    echo  "[$base] [cmd] [ $cmd ]" >> /tmp/proxy
    ( eval "$cmd" ) 1>/dev/null 2>/dev/null
    local res=$?
    if [ "$res" -eq 0 ];then
       eval "$cmd"
    else
        #error code
        echo "[warning][code:$res]" >> /tmp/proxy
    fi
}

use(){
    #depend: dir_library
    proxy print_func_n 33
    local input=''
    # args=()
    local words=''
    local cmd=''
    if [ "$#" -gt 0 ];then
        local    dirname=${1:-''}
        local   filename=${2:-''}
        cmd="echo dirname: $dirname"
        proxy "$cmd"
        cmd="echo filename: $filename"
        proxy "$cmd"

        local  dir="$dir_library/$dirname"
        local  file="$dir/$filename"
        if [ -d "$dir" ];then
            if [ "$filename" ];then

                echo "=$filename="
                if [ -f "$file" ];then

                    proxy                     source $file
                else
                    proxy               layout "$dir"
                    #                search "$dir" "$filename"
                    #    reason_of_death            "no such file: " "$file"

                    proxy     reason_of_death "no such file in the directory" "$dirname + $filename"
                fi
            else
                proxy     layout "$dir"
                proxy    reason_of_death "supply a file name "
            fi
        else
            dir_prev=`dirname $dir` 
            proxy  layout "$dir_prev"
            proxy  reason_of_death 'no such directory' "$dir_prev:::$dirname"
        fi
    else
        proxy  reason_of_death 'no args'
    fi
}
search(){
    proxy  print_line
    proxy   print_func_n 36
    file_results=/tmp/results

    local   word="$1"

    local  dir="${2:-$dir_library/cfg}"
    cmd="echo \"dir: $dir  , word: $word\""
    proxy "$cmd"
    #   limit=4
    grep -r $word $dir --color=auto > $file_results
    #    echo "[$limit] $cmd"
    echo "[FILE SEARCH RESULTS] ( $max_res )" "$file_results"
    cmd="cat $file_results | head -${max_res}"
    proxy " $cmd"
    proxy print_line
}

layout(){

    local  dir="$1"
    proxy "echo layout"
    proxy    print_line

    proxy    "print_func_n 35"
    proxy "echo $dir"
    proxy  "tree $dir -L 1"

    proxy  print_line
}

test(){
    print_color 32 '[TEST]'
cmd='use cfg/public/color color.cfg'
print_color 33 "[ testing: ] $cmd"
eval "$cmd"
#print_color 33 done
cmd="search random"
print_color 33 "[ testing: ] $cmd"
eval "$cmd"
}
export -f use
export -f layout
export -f search
#export -f selfish
#export -f exiting
#export -f coverage1
#export -f add_alias_for
#export -f print_color
steps(){
load
test
}
steps
set +o nounset

