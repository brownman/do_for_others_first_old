#depend: proxy + print_func_n


#shopt -s expand_aliases
set -o nounset
export dir_tmp=$dir_library/src/rc/tmp
#export dir_breathing=$dir_library/cfg/breathing
#source $dir_breathing/helper.cfg
#export file_aliases=$dir_tmp/aliase_dynamic.cfg
#[ -f $file_aliases ] && rm $file_aliases

use(){
    print_func_n 33
    local input=''
   # args=()
    words=''
    if [ "$#" -gt 0 ];then
        dirname=${1:-''}
        filename=${2:-''}
        echo -ne "\tdirname: $dirname"
        echo -e "\tfilename: $filename"

        dir="$dir_library/$dirname"
        file="$dir/$filename"
        if [ -d "$dir" ];then
            if [ "$filename" ];then

echo "=$filename="
                if [ -f "$file" ];then

                    sourcing $file
                else
                    layout "$dir"
    #                search "$dir" "$filename"
                #    reason_of_death            "no such file: " "$file"

                reason_of_death "no such file in the directory" "$dirname + $filename"
                fi
            else
                layout "$dir"
                reason_of_death "supply a file name "
            fi
        else
            dir_prev=`dirname $dir` 
            layout "$dir_prev"

            reason_of_death 'no such directory' "$dir_prev:::$dirname"
        fi
    else
        reason_of_death 'no args'
    fi
}
search(){
    print_line
    print_func_n 36

    dir="$1"
    word="$2"

    echo "dir: $dir" "word: $word"
    #   limit=4
    grep -r $word $dir --color=auto > $file_results
    #    echo "[$limit] $cmd"
    cat $file_results | head -2
    print_line
}

layout(){
    print_line
    dir=$1
    print_func_n 35
    echo $dir
    tree "$dir" -L 1
    print_line
}


export -f use
#export -f selfish
#export -f exiting
#export -f coverage1
#export -f add_alias_for
#export -f print_color
set +o nounset
