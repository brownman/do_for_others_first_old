#!/bin/bash  -e
#set -o nounset
#help:     bashrc loads only this func
#desc:     we can start playing around
#question: what is the shortest path to use a list?
present_file(){
print_file $1
}
print_file(){
    file=$1
    echo $file
    cat $file
}
update_file(){
    #info: fallback mode - update the logger 
    local    args=(  "$@" )
    local   cmd="${args[@]}"
    ( type update_file01 2>/dev/null )
    local res=$?
    if [ "$res" -eq 0  ];then
        update_file01 "$cmd"
    else
        echo "$cmd" >> $file_logger
    fi
}

robot(){
    #info: print to screen or to a file
    local    args=(  "$@" )
    local   cmd="${args[@]}"
    type robot01 2>/dev/null 
    local res=$?
    #        echo "robot01 exist?  $res"
    if [ "$res" -eq 0  ];then
        robot01 "$cmd"
    else
        update_file "$cmd"
    fi

}
proxy(){
    #info: proxy every command
    local    args=(  "$@" )
    local   cmd="${args[@]}"
(    type proxy01 2>/dev/null )
    local res=$?
    #        echo "proxy01 exist?  $res"
    if [ "$res" -eq 0  ];then
        proxy01 "$cmd"
    else
        robot "$cmd"
    fi

}

echo(){
    #info: like we should
    #check: type echo
    local   util=/bin/echo
    local    args=( "$@" )
    local cmd="${args[@]}"
    $util "$@" >> $dir_tmp/echo
    eval "$util $cmd"
}

step1(){
    #info:reset
    #check: assert string_exist $today
    #desc:  prepare datebase for storing the execution trace
    export dir_tmp=/tmp/log

[ ! -d /tmp/log ] && { mkdir /tmp/log; } || { ls -ld /tmp/log; }
    ###############exporting vars
    export MODE_LIST=true
    export delay=5
    export today=`date +%m_%d_%y`
    export time=`date | tr -s ' ' | cut -d' ' -f4 | sed 's/:/_/g'`
    ######################## SPACIAL FILES
    echo '[ ENTRY_POINT.cfg ]'
    export file_robot=$dir_tmp/robot.txt
    export file_clip=$dir_tmp/clip.txt
    export file_trace=$dir_tmp/trace.txt
    export file_logger=$dir_tmp/logger.txt
    export file_error=$dir_tmp/err.txt
    export file_out=$dir_tmp/out.txt
    export file_assert=$dir_tmp/assert.txt
    export file_echo=$dir_tmp/echo.txt
    echo -n '' > $file_robot
    echo -n '' > $file_echo
    echo -n '' > $file_logger
}

step2(){
    ############################################### step2 : set minimal file structure: 
    export file_struct=$dir_root/0/cfg/struct.cfg
    proxy        source $file_struct
    proxy figlet 'layout'
}

step3(){
    ############################################### step1 : set proxy for easy error tracing
    export file_proxy=$dir_root/0/cfg/proxy.cfg
    $sh_coverage $file_proxy
    proxy figlet 'proxy'
}

step4(){
    ############################################### step1 : set proxy for easy error tracing
    export file_helper=$dir_root/0/cfg/helper.cfg
    proxy  $sh_coverage $file_helper
    proxy figlet 'helper'

}
step5(){
    proxy     print_line
    proxy   figlet 'think     smaller'
    proxy     source $dir_root/prompt.cfg
}
report(){
    proxy print_func
    proxy present_file $file_echo
    proxy print_screen
    proxy present_file $file_logger
}
steps(){
if [ $0 = bash ];then
    #clear
    step1
    step2
    report
 
else
step1
step2
    report
fi
   }

steps
