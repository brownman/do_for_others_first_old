echo '[PROXY]'
#help:   log each command
#question:   how to quickly debug an error
#depend: $file_robot 

run_list(){
    local path=$1
pushd "$path">/dev/null
$sh_list
popd >/dev/null
    }
proxy(){
#info: proxy each command:
#desc: set a fallback to premature call to a function
#example: update sleep() upon executer etc

    local args=( "$@" )
    local cmd="$sh_wrapper ${args[@]}"
        robot "proxy: $cmd"
        eval "$cmd" 
}

robot(){
#info: log a command OR just explain inline using the command: robot
#warn: dont call the proxy/assert
    local args=( "$@" )

echo  "[caller0] $0"
echo  "[line_no] ${LINENO[1]}"
echo  "[bash_lineno] ${BASH_LINENO[1]}"

        if [ ${#args[@]} -gt 0 ];then

            local cmd="${args[@]}"

                local arg0="${args[0]}"

    case "$arg0" in
                please)
                    echo "[PLEASE] $cmd"
                    ;;
                *)

                echo "$cmd" >> $file_robot
                    ;;
                esac

        else
            echo  'no args'
                fi


}
assert(){
    local     args=( "$@" )
        let 'res=1'

        if [ "${#args[@]}" -eq 2 ];then

            local action="${args[0]}"
                local item="${args[1]}"

    case "$action" in
                file_exist)    
#[ -f "$item" ] && let 'res=0' 
                    echo
                    ;;
                file_has_content)  
#[ -s "$item" ] && let 'res=0' 
                    echo
                    ;;
                *)  robot 'invalid assertion' "$action"
                    ;;
                esac
        else

            robot "echo supply 2 args: $@"

                fi

                robot please "$@ : res:$res"
                return $res
}

export -f proxy
export -f robot
export -f assert
export -f run_list
