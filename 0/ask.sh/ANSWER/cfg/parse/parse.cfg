parse_caller(){
show_my_name func

local num=`echo "$1" | cut -d' ' -f1`
local file=`echo "$1" | cut -d' ' -f3`
cmd="vim $file +$num"
update_clipboard "$cmd"
}
parse_primary(){
    red 'PARSE()'
    show_my_name func
    echo show_my_name func
    exiting
    local all="$1"
    local str=`echo $all | sed 's/line /+/g'`
    str_to_arr "$str"
    #we have: arr
    num="${#arr[@]}"
    exe="${arr[0]}"
    line="${arr[1]}"
    error="${arr[2]}"
    error_code="${arr[3]}"
    blue 'Assume:'
    echo -e "\t\tarray size: $num"
    echo -e "\t\texe: $exe"
    echo -e "\t\tline: $line"
    echo -e "\t\terror: $error"
    echo -e "\t\terror+code: $error_code"

    #printf "%s\n" "${arr[@]}" > /tmp/error.txt

}
update_clipboard(){
    local cmd="$1"

echo parse | flite
    print_note 'updating the clipboard... '
    echo "$cmd"
    echo "$cmd" | xsel --clipboard
    }

export -f parse_caller
export -f parse_primary
export -f update_clipboard

