
parse_caller(){
    show_my_name func

    local num=`echo "$1" | cut -d' ' -f1`
    local file=`echo "$1" | cut -d' ' -f3`
    cmd="$EDITOR $file +$num"
    update_clipboard_caller "$cmd"
}
parse_primary(){
    red 'PARSE()'
    show_my_name func


    local all="$1"

    echo "$all"
    local str=`echo $all | sed 's/line  /+/g'`
    echo "$str"
    exiting
    str_to_arr "$str"
    #we have: arr
    num="${#arr[@]}"
    exe="${arr[0]}"
    line="${arr[1]}"
    error="${arr[2]}"
    error_code="${arr[3]}"
    blue 'Assume:'
    echo -e "\t\tarray size: $num"
    echo -e "\t\texe: $exe"
    echo -e "\t\tline: $line"
    echo -e "\t\terror: $error"
    echo -e "\t\terror+code: $error_code"

    echo 'parse primary' | flite

    notify-send "$error" "$error_code"
    cmd="$EDITOR $exe +$line" 
    echo "$cmd"

    echo "$cmd" | xsel --clipboard
    sleep 1
    #        green "$0 says:"
    echo 'your clipboard has been updated with:'
    blue "$cmd"

    #printf "%s\n" "${arr[@]}" > /tmp/error.txt

}
update_clipboard_caller(){
    local cmd="$1"


    echo 'parse' | flite
    print_note 'updating the clipboard... '
    echo "$cmd"
    echo "$cmd" | xsel --clipboard
}

export -f parse_caller
export -f parse_primary
export -f update_clipboard_caller

