test(){


}
parse_error_1 () {
    print_func
        local err="$1" # error status
        local line="$2" # LINENO
        local linecallfunc="$3" 
        local command="$4"
        local funcstack="$5"
        echo "<---"
        echo "ERROR: line $line - command '$command' exited with status: $err" 
        if [ "$funcstack" != "::" ]; then
            echo -n "   ... Error at ${funcstack} "
                if [ "$linecallfunc" != "" ]; then
                    echo -n "called at line $linecallfunc"
                        fi
                else
                    echo -n "   ... internal debug info from function ${FUNCNAME} (line $linecallfunc)"
                        fi
                        echo
                        echo "--->" 
}

export -f parse_error_1


trap 'parse_error $? $LINENO $BASH_LINENO "$BASH_COMMAND" $(printf "::%s" ${FUNCNAME[@]})'  ERR;
