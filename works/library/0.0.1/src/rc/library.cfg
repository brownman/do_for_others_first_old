#shopt -s expand_aliases
#echo "USING: library.sh"
#echo -n '' > .alias.optional
#shlvl
#echo 'example: use public.history.save'
#echo '_'
#print_shlvl
set -o nounset
export dir_tmp=$dir_library/src/rc/tmp
export file_aliases=$dir_tmp/aliase_dynamic.cfg
[ -f $file_aliases ] && rm $file_aliases
selfish(){
#    echo 'selfish()'
    local ptrn="$1"
    local num="$2"
    local delimeter="$3"
    local color="$4"
    local path3="$5"


    cmd="cat \"$path3\" | grep $ptrn | cut -d\"$delimeter\" -f${num}|xargs"
#    echo "cmd: $cmd"
    str=$( eval "$cmd" )
    #str=`cat "$path3" | grep $ptrn | cut -d"$delimeter" -f${num}|xargs -0 echo` #print many lines
    
    
    if [ -n "$str" ];then
        print_color_n $color "\t $ptrn \t"
        echo " [ $str ]" 
 #   else 
        #        echo 'no grepping for pattern: ' "$ptrn"
#        echo -n ' .. '
    fi
    #>> .history

}


#echo 'set -o nounset'
#set -o nounset
coverage1(){
#    echo '---> coverage1() '
    file="$1"
    selfish 'export ' 3 ' ' 35 "$file"
    selfish 'alias ' 1 '=' 32  "$file"
    selfish 'trap ' 2 ' ' 31 "$file"
}
add_alias_for(){
    str="$1"
    type="$2"
    file="${str}.${type}"
    if [ -f "$file" ];then
        base=`basename $str`
#        from="${base}E"

#        str="alias $from='gvim $file'"
#        echo "$str" >> $file_aliases
#        eval "$str"

        from="edit_${base}"
        echo  -en "[ $from ] \t"
        str="alias $from='gvim $file'"
        echo "$str" >> $file_aliases
        eval "$str"






        #source $file_aliases
#        print_color 35 "[ ALIASES ] which generated dynamicly:"
#        cat $file_aliases
    else
        echo 'no such file' "$file"
    fi

}

use(){
#    echo "---> use()"


    str=''
    args=()
    words=''
    if [ "$#" -gt 0 ];then
        first=${1:-''}
        str=`echo  "$first"|sed 's_\._/_g'`
        shift
        if [ "$#" -gt 0 ];then
            args=( "$@" )

            words="${args[@]:-''}"
        fi

    fi
    path="$dir_library/src/rc"
    if [ -d "$path" ];then
# echo '[REQUEST]' "$str"   
# sleep 1
    prefix="$path/$str"
    #echo $prefix
    #ls $prefix.cfg
    if [ -f "$prefix.cfg" ];then

        if [ "$words" = edit ];then
            echo gvim "$prefix.cfg"

        else


            #print_line
#            echo "File: $prefix.cfg"
filename_cfg=`basename $prefix.cfg`
echo -n "[ $filename_cfg ]"


            cmd="source $prefix.cfg" 



            echo "$first" >> $dir_tmp/commands.sh
            echo "$cmd" >> $dir_tmp/commands.sh

#            echo "$cmd"
            eval  "$cmd" 1>/dev/null

            add_alias_for "$prefix" "cfg"
            coverage1 "$prefix.cfg"

        fi
    elif [ -f "$prefix.sh" ];then
        if [ "$words" = edit ];then
            echo gvim "$prefix.sh"
        else

            add_alias_for "$prefix" "sh"

            #        echo "==============  exist: $prefix.sh"
            echo "File: $prefix.sh"
            coverage1 "$prefix.sh"

            cmd="$prefix.sh ${args[@]}"
            commander "$cmd"
        fi
    else
        echo 'Tree: '

        tree "$prefix" -L 2
        tree "$prefix" -L 1
        echo
        num=4
        echo "[ $num ]" 'recent commands:'
        cat $dir_tmp/commands.sh | tail -$num
        #        tree "$prefix" -L 2 $dir_rc/lib
    fi
else
    echo 'no such dir: ' "$path"
    exit 1
    fi



}
#export -f use
nothing(){
    if [ $# -gt 0 ];then
        args=( "$@" )
        use1 "${args[@]}"
    else
        use1
    fi
}


export -f use
#export -f selfish
#export -f exiting
#export -f coverage1
export -f add_alias_for
#export -f print_color

set +o nounset
