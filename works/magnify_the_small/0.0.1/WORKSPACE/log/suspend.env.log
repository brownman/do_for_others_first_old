dir_library=/home/dao04/JAIL/TREE/works/library/0.0.1
lister_sh=/home/dao04/JAIL/TREE/works/lister/0.0.1/lister.sh
SSH_AGENT_PID=6160
LESS_TERMCAP_mb=[01;31m
file_aliases=/home/dao04/JAIL/TREE/works/library/0.0.1/src/rc/tmp/aliase_dynamic.cfg
time=14_26_03
LESS_TERMCAP_md=[01;37m
GLADE_PIXMAP_PATH=:
GPG_AGENT_INFO=/home/dao04/.cache/keyring-Pq4kts/gpg:0:1
LESS_TERMCAP_me=[0m
single_sh=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/singles/single.sh
XDG_MENU_PREFIX=xfce-
SHELL=/bin/bash
TERM=xterm
XDG_SESSION_COOKIE=747cb34ec7e2320b881a0f4d52d91185-1394536043.302876-1109303523
dir_workspace=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/WORKSPACE
TIMEOUT_ALIVE=120
dir_singles_cli=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/singles_cli
WINDOWID=58720260
LESS_TERMCAP_ue=[0m
dir_root=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1
USER=dao04
dir_share=/home/dao04/JAIL/TREE/works/library/0.0.1/src/rc/cfg/share
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:
dir_indicator=/tmp/INDICATORS
GLADE_MODULE_PATH=:
XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session1
SOUND=false
XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0
delay=120
SSH_AUTH_SOCK=/home/dao04/.cache/keyring-Pq4kts/ssh
SESSION_MANAGER=local/localhost:@/tmp/.ICE-unix/6180,unix/localhost:/tmp/.ICE-unix/6180
TIMEOUT_SUSPEND=60
dir_vendor=/home/dao04/JAIL/TREE/vendor/0.0.1
ln_desktop=/home/dao04/Desktop/ROUNDS
XDG_CONFIG_DIRS=/etc/xdg
LESS_TERMCAP_us=[01;32m
GMAIL_USER_BASHRC=advance.linux2
dir_wiki=/home/dao04/JAIL/TREE/WIKI
DESKTOP_SESSION=lightdm-xsession
PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
translate_sh=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/singles/translation/translation.sh
PWD=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/bin/0_sos
BASH_GUI=true
dir_how_am_i=/home/dao04/JAIL/TREE/works/how_am_i/0.0.1
LANG=en_US.UTF-8
GNOME_KEYRING_PID=6116
dir_singles=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/singles
dir_plugins=/home/dao04/JAIL/TREE/works/plugins/0.0.1
dir_magnify=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1
GDMSESSION=lightdm-xsession
file_plan=/home/dao04/JAIL/TREE/plan.txt
coverage_sh=/home/dao04/JAIL/TREE/works/coverage/0.0.1/coverage.sh
HOME=/home/dao04
SHLVL=74
dir_lister=/home/dao04/JAIL/TREE/works/lister/0.0.1
dir_log=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/.LOG
GMAIL_USER_PASSWORD=advance.linux
LOGNAME=dao04
dir_test=/home/dao04/JAIL/TREE/works/test/0.0.1
DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-kmpY18fIdN,guid=6a28ef6ffe40a7c5e7390123531eee6b
XDG_DATA_DIRS=/usr/local/share:/usr/share
LESS_TERMCAP_so=[01;44;33m
suspend_sh=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/singles/suspend/suspend.sh
dir_works=/home/dao04/JAIL/TREE/works
dir_coverage=/home/dao04/JAIL/TREE/works/coverage/0.0.1
single_cli_sh=/home/dao04/JAIL/TREE/works/magnify_the_small/0.0.1/singles_cli/single_cli.sh
GUI=true
DISPLAY=:0.0
LIBGLADE_MODULE_PATH=:
GLADE_CATALOG_PATH=:
today=03_11_14
dir_tmp=/home/dao04/JAIL/TREE/works/library/0.0.1/src/rc/tmp
XAUTHORITY=/home/dao04/.Xauthority
COLORTERM=Terminal
LESS_TERMCAP_se=[0m
xsel=() {  util=`which xsel`;
 if [ "$util" ]; then
 if [ $# -gt 0 ]; then
 str="$1";
 echo "Updating Clipboard...";
 cmd="echo \"$str\" | $util --clipboard";
 eval "$cmd";
 fi;
 else
 trace echo 'no such util: xsel';
 fi
}
pull=() {  print_func;
 subject="$1";
 cmd="cat $0 | grep $subject:";
 str=`eval "$cmd"`;
 if [ "$str" ]; then
 str1=`echo "$str" | cut -d':' -f2`;
 remove_trailing "$str1";
 else
 reason_of_death 'no such subject:' "$subject";
 fi
}
selfish=() {  local ptrn="$1";
 local num="$2";
 local delimeter="$3";
 local color="$4";
 local path3="$5";
 cmd="cat \"$path3\" | grep $ptrn | cut -d\"$delimeter\" -f${num}|xargs";
 str=$( eval "$cmd" );
 if [ -n "$str" ]; then
 print_color_n $color "\t $ptrn \t";
 echo " [ $str ]";
 fi
}
show_funcs=() {  print_func;
 cat $0 | grep '(){' | cut -d'(' -f1
}
is_a_number=() {  yournumber=$1;
 re='^[0-9]+$';
 if ! [[ $yournumber =~ $re ]]; then
 echo "error: Not a number" 1>&2;
 exit 1;
 fi
}
breakpoint=() {  flite -t 'error';
 notify-send "$0";
 gxmessage -title 'local Breakpoint' "$0"
}
xcowsay=() {  util=`which xcowsay`;
 if [ "$util" ]; then
 $util "$@";
 else
 trace echo 'no such util: xcowsay';
 fi
}
print_color_n=() {  echo -en "\x1B[01;$1m[*]\x1B[0m $2 "
}
every=() {  local num=$1;
 local cmd_do="$2";
 local cmd_else="$3";
 echo "$1";
 echo "$2";
 echo "$3";
 random $num;
 local res=$?;
 local output='';
 if [ $res -eq 0 ]; then
 echo "cmd: $cmd";
 eval "$cmd_do";
 else
 eval "$cmd_else";
 notify-send "skip" "$num";
 fi;
 return $res
}
trace=() {  echo "$@" > /dev/null
}
aspell=() {  print_func;
 return $SUCCESS;
 util=`which aspell`;
 result=0;
 if [ "$util" ]; then
 if [ $# -gt 0 ]; then
 cmd="$util -a <<< \"$@\"";
 str=$( confirm "$cmd" );
 cmd1="echo \"$str\" |  $util -a | grep  ','";
 str1=$( confirm "$cmd1" );
 result=$( echo "$str1" );
 else
 reason_of_death "no arguments - no spelling";
 fi;
 echo "$result";
 else
 trace echo 'no such util: aspell';
 fi
}
print_func=() {  echo "---> ${FUNCNAME[1]}()"
}
random=() {  print_func;
 local num="${1:-5}";
 let "r = $RANDOM % $num";
 return $r
}
wget=() {  util=`which wget`;
 if [ "$util" ]; then
 $util "$@";
 else
 trace echo 'no such util: wget';
 fi
}
gxmessage=() {  util=`which gxmessage`;
 if [ "$util" ]; then
 $util "$@";
 else
 trace echo 'no such util: gxmessage';
 fi
}
flite=() {  util=`which flite`;
 if [ "$util" ]; then
 if [ $# -eq 1 ]; then
 local str="$1";
 notify-send "$str";
 cmd="$util -t \"$str\"";
 eval "$cmd";
 fi;
 else
 trace echo 'no such util: flite';
 fi
}
check_depend_process=() {  print_func;
 local process=`pull check_depend_process`;
 cmd="ps -ef | grep $process | grep -v grep";
 str=`eval "$cmd"`;
 [ -z "$str" ] && { 
 print_color 31 "ERROR:\nPlease Run: $process";
 exiting
 }
}
print_color=() {  echo -e "\x1B[01;$1m[*]\x1B[0m $2 "
}
notify-send=() {  trace trace echo 'notify-send()';
 local util=`which notify-send`;
 if [ "$util" ]; then
 local arg1='';
 local arg2='';
 gui=true;
 if [ "$gui" = true ]; then
 if [ $# -eq 0 ]; then
 $util 'Got Empty string';
 else
 if [ $# -eq 1 ]; then
 arg1="$1";
 $util "$arg1" '-';
 else
 arg1="$1";
 arg2="$2";
 $util "$arg1" "$arg2";
 fi;
 fi;
 else
 echo -e '\t\tskipping call to notify-send';
 echo "$arg1";
 echo "$arg2";
 fi;
 else
 trace echo 'no such util: notify-send';
 fi
}
print_line=() {  hr='----------------------------------------------------------------';
 printf '%s' "${hr:0:${COLUMNS:-$(tput cols)}}";
 echo
}
exiting=() {  print_color 31 exiting..;
 exit 1
}
coverage1=() {  file="$1";
 selfish 'export ' 3 ' ' 35 "$file";
 selfish 'alias ' 1 '=' 32 "$file";
 selfish 'trap ' 2 ' ' 31 "$file"
}
expose=() {  print_func;
 subject="$1";
 print_color 33 "subject: $subject:\t\t";
 pull "$subject"
}
for_each_element=() {  cmd="$1";
 for t in "${arr[@]}";
 do
 eval "$cmd $t";
 done
}
confirm=() {  echo 'CONFIRM:';
 local cmd="$1";
 if [ "$cmd" != '' ]; then
 echo -e "cmd:\n ${cmd}";
 echo 'press y to continue';
 read answer;
 if [ "$answer" = y ]; then
 echo 'running... ';
 eval "$cmd";
 else
 exiting;
 fi;
 else
 echo "supply a command";
 fi
}
use=() {  str='';
 args=();
 words='';
 if [ "$#" -gt 0 ]; then
 first=${1:-''};
 str=`echo  "$first"|sed 's_\._/_g'`;
 shift;
 if [ "$#" -gt 0 ]; then
 args=("$@");
 words="${args[@]:-''}";
 fi;
 fi;
 path="$dir_library/src/rc";
 if [ -d "$path" ]; then
 prefix="$path/$str";
 if [ -f "$prefix.cfg" ]; then
 if [ "$words" = edit ]; then
 echo gvim "$prefix.cfg";
 else
 filename_cfg=`basename $prefix.cfg`;
 echo -n "[ $filename_cfg ]";
 cmd="source $prefix.cfg";
 echo "$first" >> $dir_tmp/commands.sh;
 echo "$cmd" >> $dir_tmp/commands.sh;
 eval "$cmd" > /dev/null;
 add_alias_for "$prefix" "cfg";
 coverage1 "$prefix.cfg";
 fi;
 else
 if [ -f "$prefix.sh" ]; then
 if [ "$words" = edit ]; then
 echo gvim "$prefix.sh";
 else
 add_alias_for "$prefix" "sh";
 echo "File: $prefix.sh";
 coverage1 "$prefix.sh";
 cmd="$prefix.sh ${args[@]}";
 commander "$cmd";
 fi;
 else
 echo 'Tree: ';
 tree "$prefix" -L 2;
 tree "$prefix" -L 1;
 echo;
 num=4;
 echo "[ $num ]" 'recent commands:';
 cat $dir_tmp/commands.sh | tail -$num;
 fi;
 fi;
 else
 echo 'no such dir: ' "$path";
 exit 1;
 fi
}
check_depend_package=() {  print_func;
 list=`pull check_depend_package`;
 print_color 32 "dependencies: ";
 echo "LIST:$list";
 for item in $list;
 do
 cmd="dpkg -L $item";
 eval "$cmd" > /dev/null 2>&1 || { 
 print_color 31 "ERROR:\nPlease Run: sudo apt-get install $item";
 exiting
 };
 done
}
play=() {  util=`which play`;
 if [ "$util" ]; then
 $util $@;
 else
 trace echo 'no such util: play';
 fi
}
check_depend_config=() {  print_func;
 list=`pull check_depend_config`;
 print_color 32 "configure:";
 echo "LIST:$list";
 for item in $list;
 do
 somevar=`echo \\$"$item"`;
 res=`eval echo $somevar`;
 [ "$res" = '' ] && { 
 print_color 31 "ERROR:\n1.Open: vars.cfg which located in the plugin directory you are trying to run.\n2.Edit variable: $item";
 exiting
 };
 done
}
commander=() {  echo 'COMMANDER()';
 cmd="$1";
 echo -e "cmd: \n $cmd";
 eval "$cmd"
}
add_alias_for=() {  str="$1";
 type="$2";
 file="${str}.${type}";
 if [ -f "$file" ]; then
 base=`basename $str`;
 from="${base}E";
 echo -en "[ $from ] \t";
 str="alias $from='gvim $file'";
 echo "$str" >> $file_aliases;
 source $file_aliases;
 else
 echo 'no such file' "$file";
 fi
}
print_script=() {  local str="SCRIPT: $0";
 echo "---> $str()" 1>&2
}
information=() {  print_func;
 expose plugin;
 expose describe
}
reason_of_death=() {  echo "why: $1";
 echo "who: $2";
 exit 1
}
covering=() {  echo
}
_=/usr/bin/env
