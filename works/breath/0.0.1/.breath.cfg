shopt -s expand_aliases
set -o nounset

: <<COMMENT
#################################priorities#############
- set the file layout  
- try using the library - to load everything else
- customise prompt screens - which we use lister instead of stepper because it change constantly
#########################################################
COMMENT

higher() { echo ${@^^}; }

print_funcname(){
    name="${FUNCNAME[1]}"
    str=`higher "$name"`
    echo "$str"
    print_color_n 32 "[ $str ]\t"
}



aliasing() 
{ 
    #        print_color 31 "[ALIASING] $str"
    #    print_func
    file="$1";
    #    type="$2";
    #    file="${str}.${type}";
    if [ -f "$file" ]; then
        base=`basename $file | sed 's/.cfg//g'`;

        from="edit_${base}";
        str="alias $from='vi $file'";
        echo "[ $base ]"
        #        echo "$str"
        #eval "$str"
        echo "$str" >> $file_aliases;
    else
        echo 'no such file' "$file";
    fi

    #sleep 2

}
load_cfg (){
    #    print_funcname
    # sleep 1
    file="$1"
    echo "$file"
    source $file
    aliasing $file
}
load_txt(){
    #sleep 1
    file="$1"
    if [ -f "$file" ];then
        str0=`basename $file` 
        str=`higher "$str0"`


        #echo -ne "[ $str ]\t" $line

        line=`cat $file | head -1`
        aliasing $file



    else
        reason_of_death 'no such file' "$file"
    fi

}


sleep1(){
    echo '.'
    trace "caller: ${FUNCNAME[1]}"
}


quick_commands(){
    echo '[QUICK_COMMANDS]'
    dir_setup=$dir_breath/00_quick_commands
    file=$dir_setup/setup.cfg
    load_cfg "$file"
    every 10 "cat $file" "trace [SKIP] presenting file $file"
}

#step00(){
#load_cfg $dir_breath/0/basic_of_basics.cfg
#}
remind_of_recent(){
if [ -d "$dir_txt" ];then
    load_txt "$dir_txt/plan.txt"
    load_txt "$dir_txt/question.txt"
    load_txt "$dir_txt/shopping.txt"
    load_txt "$dir_txt/life.txt"
else
    reason_of_death 'no such dir' "$dir"
fi

}
export_struct(){
    #info: setting the directory structure layout
    #reason: map the file_structure  - than load it elsewhere
    #check: [ -d "$dir_works" ]


    #cmd="alias exportE=\"vi $file\""

    #    alias exportsE="vi $file"
    #    alias edit_exports="vi $file"

    echo
    #eval "$cmd"
}


library_use(){
    #info: load .cfg using the library - set breakpoint/traps/quick_ commands/hotkeys/cron jobs
    #reason: control what is loaded to memory - through 1 file only
    #check: print_color 31 nice
    file=$dir_library/src/rc/library.cfg
    #    alias libraryE="vi $file"
    load_cfg  "$file"
    #    load_cfg $file

}
library_defaults(){

    file="$dir_breath/2_library_defaults/library_defaults.cfg"
    load_cfg "$file"

    alias defaultsE="vi $file"
    alias edit_defaults="vi $file"
    echo '[OPTIONAL]'
    echo 'load_cfg aliases_dynamic'


}


#load_cfg "$dir_breath/3/run.cfg"
#info: custom screens - wellcome the user:
#reason: remind him about his top priorities
#check:   step is..


#info:   measore  the pro
#reason: measure his progress OR update his wallpaper with the recent logs
#check:  echo $PRODUCTIVITY_LEVEL_IS
custom_list(){
    echo ofer $dir_list/screens/list
    echo

}
layouts(){

    tree -L 1 $dir_breath
    sleep1 2
    tree -L 2 $dir_breath



    sleep1 3

}
every_other_time(){

    every 10 layouts "trace [SKIP] running function: layouts"
    #    every 15 "cat $dir_breath/.library_use" "trace [SKIP] logging library use"
    echo
}
log_reset(){
    print_funcname
    echo -n '' > $file_aliases
}
log_use(){
    print_funcname
    every 5 "print_file $file_aliases" "trace [skip] printing: file_aliases"
    source $file_aliases
}
steps(){
    PATH=$PATH:~/JAIL/TREE/works/LISTS/bin
    export dir_breath=$dir_root/works/breath/0.0.1
    export file_basic_of_basics=$dir_breath/basic_of_basics.cfg
    file_aliases=$dir_breath/file_aliases_dynamic.cfg
    log_reset
    file="$dir_breath/1_struct/exports.cfg"
    load_cfg $file
    export file_logger=$dir_breath/.logger.txt
    load_cfg $file_basic_of_basics
    #tree $dir_breath
    #export_struct
    #    library_use
    #    library_defaults
    #    quick_commands
    remind_of_recent
    #  custom_list
    every_other_time
    log_use
}


steps
#type reason_of_death
set +o nounset
