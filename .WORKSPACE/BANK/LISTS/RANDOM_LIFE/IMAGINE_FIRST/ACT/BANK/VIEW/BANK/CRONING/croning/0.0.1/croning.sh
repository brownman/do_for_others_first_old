#!/bin/bash 

path=`where_am_i $0`
pushd "$path">/dev/null
exec 2>/tmp/err
trap trap_err ERR
set -o nounset
source $path/setup.cfg


trap_err(){
    local    str_caller=`caller`
    print_func
    local cmd1="gvim +${str_caller}"
    #proxy update_clipboard "$cmd"
    print_line
    cat /tmp/err
    print_line
    echo "$cmd1"
    print_line
    local    cmd=$( gxmessage -file /tmp/err -entrytext "$cmd1" )
    eval "$cmd"
    exit 0
}

#echo "$@" >> $log_wrapper.txt
################################## start
#num="${1:-1}"
#notify-send "croning choose:" " $num"
#sleep "$num"
#########################################
step(){
    str=$1
    print_color 34 "\t\t\t\t [ $count_step ] $str  "
    proxy "$str" 
    let 'count_step += 1'
}
steps(){
    #    proxy reset_log
    ################am I root?
    step set_user

    ################set global vars / list.txt can use it
    step    exports

    ################ load cron's env dump
    step drop_env

    ################ show error generated by the cron service
    step  run 
}


clear
export choose=${1:-0}
count_step=0
#type steps | grep step | sed 's/step//g' | sed 's/;//g'
pv1  "[RUNNING]"
proxy steps
popd>/dev/null
#cat -n list.txt
