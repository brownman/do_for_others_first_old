#depend_package: xsel
echo -e " \t\t\t[LOADER] "
export GUI=true


#####################file know its name:
#file_this=$dir_root/loader.cfg
#######################################
################## clean the log file:
export file_log=$dir_root/log.txt
export file_coverage_stopped=$dir_root/coverage.txt
##################
coverage(){
    local str_ptrn="$1"
    str=`cat $file_cfg | grep $func_name -A 3 | grep $str_ptrn |  sed 's/#$str_ptrn://g'`
    echo -e [$str_ptrn] "File:\t\t$file_cfg"
    echo -e [$str_ptrn] "Function:\t\t$func_name"
    echo -e [$str_ptrn] "Test:\t\t$str"
    if [ "$str" ];then
        eval "$str" 1>/dev/null #we are interested only if there is an error case
    else
        str_goto=`grep $func_name $file_cfg -n | cut -d ':' -f1`
        cmd="vi $file_cfg +$str_goto"
        echo -e [$str_ptrn] "Clipboard:\t\t$cmd"
        echo "$cmd" | /usr/bin/xsel --clipboard
        reason_of_death "Empty tag: $str_ptrn" "$func_name" 
    fi

}

steps(){
    #info: run all steps: use the level values to determine the amount of allowed steps
    str=`cat $dir_cfg/level.txt` 
    if [ "$str" != '' ];then
        let "max=$str"
        echo -e "\t\t\t\t[LEVELS MAX] $max"

        START=0
        END=$max
        ## save $START, just in case if we need it later ##
        level=$START
        while [[ $level -lt $END ]]
        do
            echo -e "\t\t\t\t\t\t[level]:  $level" 
            func_name="step${prefix}${level}"

            echo "[..evaluating func..]"
            step${prefix}${level}
            coverage info 
            coverage check 

            ((level = level + 1))
        done
    else
        '[error] loading level.txt file'
    fi
}
dir_cfg=$dir_root
file_cfg=$dir_cfg/steps.cfg
source $file_cfg
steps
dir_cfg=$dir_root/control
file_cfg=$dir_cfg/steps.cfg
source $file_cfg
steps
#            str=`cat $file_cfg | grep  -A 3 $func_name | grep info | tr -s ' '`
#            if [ "$str" = '' ];then
#                reason_of_death 'Empty tag: info' "$func_name" 
#            else
#                echo -n [INFO]
#                echo "$str"
#            fi

