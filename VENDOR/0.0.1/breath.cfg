#!/bin/bash -e
#url: expand path: http://bash.cyberciti.biz/guide/Path_name_expansion
#depand: pv

clear
shopt -s expand_aliases

alias proxy="proxy1"
read_script_tag(){
    local file=$1
    local tag=$2
    local top=5
    local str=$( cat $file | head -${top} | grep $tag | sed "s/#$tag://g" )
    if [ -n "$str" ];then
        echo -ne "\t\t\t[ $tag ] "
        echo $str
    else "[ERROR] empty tag $tag"
        proxy go_home
    fi
    #| tail -1 
}

start(){
    rm /tmp/proxy
}
set_env(){
    export max_lines=5
    #dir_self=`dirname $BASH_SOURCE`
    dir_self="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

    #source $dir_self/quick.cfg
}
aliasing(){
    local file=$1
    local str0=`dirname $file`
    local str=`basename $str0`
    #`basename $file | cut -d'.' -f1 `
local dir=`dirname $file`
    proxy  "alias ${str}E='pushd $dir;vi $file'"
    proxy "alias ${str}_steps='$file'"

    local str1=`dirname $file`



    proxy "alias cd_$str='cd $dir'"
}
proxy1(){
    #zbanun
    local args=( "$@" )
    local cmd="${args[@]}"
    echo "$cmd" >> /tmp/proxy
    eval "$cmd"
}
clear
read_tag(){
    local file=$1
    local funcs=$2
    local tag=$3
    echo -e "\t\t[ $func ]"
    #alias "$func=\"echo $func\""


    local str=$( cat $file | grep $func -A 1 | grep $tag )
    if [ -n "$str" ];then
        echo -ne "\t\t\t[ $tag ] "
        echo $str
    else "[ERROR] empty tag $tag"
        proxy go_home
    fi
    #| tail -1 
}
find_files(){
    local ptrn="$dir_self/CFG/*"
    local ptrn1="*.cfg"

    local  dirs=$( ls -d  $ptrn )
    
#    local str1=`dirname $BASH_SOURCE | rev | cut -d'/' -f1 | rev`
#    echo -e "\t[$str1]"

    for dir in $dirs;do
local dirname=$( basename $dir )
echo "[ $dirname ]"
#        ls -l $dir

        local  files=$( ls $dir/$ptrn1 2>/dev/null )
        for file in $files;do
            #echo $file
            proxy aliasing $file
            #proxy source $file
            local str=`basename $file`
            echo -e "\t[$str]"
            #local funcs=$( cat $file | grep "(){" | sed 's/(){//g' )
            #for func in $funcs;do
            #	read_tag "$file" "$func" info
            #done

            read_script_tag "$file" info
            read_script_tag "$file" pending
        done

    done
}

present_file(){
    local file=$1
    echo -n '[ FILE ] '
    echo $file
    cat $file | tail -${max_lines}
}
finish(){
    local cmd="present_file /tmp/proxy"
    alias log="eval \"$cmd\""
}
steps(){
    proxy start
    proxy set_env
    proxy find_files
    proxy finish
}

#set -o nounset
steps
unalias proxy
