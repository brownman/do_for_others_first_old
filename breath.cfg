#help: 
#options: test/covering/presenting
#test: if test passed -> execute 
#      if test failed -> update the clipboard with a vim command (quick jump to the buggy line)
#wrap: 

covering(){
    echo '[COVERING:]  '


    path=`pwd`
    export path=$path
    echo "path is: $path"
    sleep 2
    action=${1:-test}



    sleep 2
    #    path=${dir_product_step:-$path}


    script_stepper="$dir_stepper/stepper.sh"
    script_test="$dir_stepper/test.sh"
    script_wrap="$dir_stepper/wrapper.sh"
    file="$path/steps.cfg"

    $script_stepper

#    echo $action
exiting
    if [ "$dir_root" ];then
        if [ "$action" = test ];then

    let 'res=0'
            [ $script_test $file 1>/dev/null 2>&1 ] && let 'res=1'  ||  let 'res=0' 
            notify-send "$res"
            #{ let 'res=1' } || { let 'res=0' }
            if [ "$res" -eq 0 ];then
                echo '[OK] loading the library' 
                sleep 3 
                #            eval  "$cmd1"
                source $file
            else
                echo '[ERROR] loading the library' 
                echo "vi $path" | /usr/bin/xsel --clipboard
                #            echo "$path"
                echo "updating the clipboard"
            fi

            #    notify-send "dir works: $dir_works"
        else
            echo  wrapping..
            sleep 2
            $script_wrap $file
        fi


    else

        echo 'must run:'
        echo './install.sh step1'
        echo 'and then try again'
    fi

}



export dir_vendor=$dir_root/VENDOR
alias query="$dir_vendor/fu-master/fu -a"

alias breathE="vi $dir_root/breath.sh"






export dir_stepper="$dir_works/stepper/0.0.1"
alias stepperE="vi $dir_stepper/stepper.sh"
alias cdstepper="cd $dir_stepper"

export dir_works="$dir_root/works"
export dir_workspace="$dir_root/WORKSPACE/$LOGNAME"
export dir_plugins="$dir_root/works/plugins/0.0.1"

export dir_product_step="$dir_works/product_step/0.0.1"
alias cdproduct="cd $dir_product_step"

#export -f command_not_found_handler
source $dir_stepper/share/color.cfg
source $dir_stepper/share/proxy.cfg
source $dir_stepper/share/pid.cfg
source $dir_stepper/share/inline.cfg
export -f covering
#pushd $dir_product_step
#covering
#popd
