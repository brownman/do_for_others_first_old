#/bin/bash -e
#url: http://www.shellcheck.net/

set -o nounset
breaking(){
    echo ' [ breaking ]'
    break
}
go_home () 
{ 
    echo '[GO HOME]'
    if [ $0 = 'bash' ]; then
        echo 'bash exiting';
        return 1;
    else
        echo 'script exiting';
        exit 1;
    fi
}

function error_exit {
local msg="$1"    

echo "[ Exit_code ] "
echo "$msg"
case $msg in
    SIGHUP)

set +o nounset
        ;;
    SIGTERM)

set +o nounset
        ;;
    ERR)

set +o nounset
        ;;
    SIGINT)

set +o nounset

        breaking
        ;;
esac
#trace exit 1
eval    go_home
}
#Trap the killer signals so that we can exit with a good message.
trap "error_exit 'SIGHUP'" SIGHUP
trap "error_exit 'SIGINT'" SIGINT
trap "error_exit 'SIGTERM'" SIGTERM
trap "error_exit 'SIGTERM'" ERR




#descript:  time control: [ devide it to 3: project/video lecture/use of other's code ]
#depend:  none
#goal:    pre-project: independant view of the project
#next step1: delegate control to project/breath.cfg: for loading the project's library 
#next step2: remind of .txt - present files: 1 file - line after line: the user stop the presentation -> execute current line
vars(){
    export delay=5
    export file_list=$dir_root/list.txt
}


present_file(){
    local file_list=$1
    local  counter=1

    while read line;do
        if [ -z "$line" ];then
            echo breaking
            break
        fi
        #parse
        local  desc=$( echo "$line" | cut -d':' -f1 )
        local  reason=$( echo "$line" | cut -d':' -f2 )
        local file=$( echo "$line" | cut -d':' -f3 )
        ##print info
        proxy toilet --gay "$counter"
        proxy echo "[DESC] $desc"
        proxy echo "[REASON] $reason"
        proxy echo "[FILE] $file"
        ##execute
        execute "$file"
        proxy sleep $delay 
        let 'counter+=1'
    done<$file_list
    echo

}
execute(){
    local     file=$1
    local cmd=''

#cat /home/dao04/JAIL/TREE/ROUTES/LECTURE/recent.cfg
#cat "$file"
    if [ -f "$file" ];then
#        echo 'file exist ' "$file"
        proxy sleep 2
        cmd=`cat $file | head -1`
 #       proxy echo "$file"
 echo "[cmd] $cmd"
        local dir=`dirname $file`
        cmd="echo \"cd $dir\" | xsel --clipboard"
        proxy "$cmd"
    else
        echo 'no such file: ' "_${file}_"
 #       cmd="echo \"ls -l $file\" | xsel --clipboard"
#        proxy "$cmd"
        proxy breaking
    fi

}
print_wellcome(){
    #depend: proxy()
local    cmd="echo hi | toilet --gay"
    proxy "$cmd"
    proxy cat $dir_root/menu.yaml
    proxy sleep 1
    proxy toilet --gay '3 routes'
    proxy sleep 1
    proxy toilet --gay 'cake of time'
}
proxy(){
    local    args=( "$@" )
    local    cmd="${args[@]}"
    echo "$cmd" >> /tmp/proxy
    eval "$cmd"
}
start(){
    echo '[start]'
}
finish(){
    echo '[finish]'
}


steps(){
    proxy start

    #set file for list
    proxy vars
    proxy print_wellcome
    proxy present_file "$file_list"       
    proxy finish

}
steps
set +o nounset
