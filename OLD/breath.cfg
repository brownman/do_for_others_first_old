#!/bin/bash -e
if [ $0 != bash ];then
set +e
    fi
#    lksdjf
#depand_func: proxy, zbabun
#touch /abc
#set +o pipefail
set -o nounset 
#set -o | grep pipefail
#source $dir_root/proxy.cfg
dir_bank=$dir_root/BANK
dir_self=`dirname $BASH_SOURCE`


print_state(){
echo "DEBUG: $DEBUG"
set -o | grep nounset
proxy sleep 3
}

setup_project(){
    export dir_library=$dir_root/LIBRARY/CODE/0.0.2/src
}

check_dependencies(){
#    echo '[CHECK DEPENDANCIES]'
        local file=$1
#proxy expose $file depend_func

local cmd="grep depend $file"
update_clipboard "$cmd"
local str=$( eval "$cmd" )

#| sed 's/depend_func://g' )
        local res=$?
        echo "res: $res"
       echo "Depend_func: $str"
        return $res
}

test(){

        check_dependencies "$dir/breath.cfg"
        local res=$?
        if [ "$res" -eq 1 ];then
            echo error
        else
            echo ok
        fi

#       [ $res -eq 0 ] &&  { echo ". $dir/breath.cfg"; } || { echo 'Dependencies Not Listed/Satisfied';go_home; }

}
run_dir(){
    local dirname=$1
        local dir="$dir_bank/$dirname"
        pushd "$dir">/dev/null
        pwd
        proxy    sleep 1
        ls -l  $dir/breath.cfg
        . breath.cfg
        proxy sleep 2
    popd>/dev/null
}

load(){
    file_list=$dir_self/list.txt
}

present_step(){
print_state
    local msg="figlet step $counter_step"
   echo "$msg" 
#$step_counter"
    go_home
                proxy "cowsay 'cli Step $counter_step'"

    let 'counter_step+=1'
    proxy sleep 4

}
read_file(){


    local    file_list=$1
        while read line;do
            if [ -n "$line" ];then
                proxy clear

proxy present_step
                    local weight=$(        echo  "$line" |  cut -d'|' -f1 )
                    local dir=$(        echo  "$line" |  cut -d'|' -f2 )
                    local cmd="run_dir $dir"
                    every "$weight" "$cmd" "proxy 'echo skip $cmd'"
                    else
                        breaking
                   fi

                    done<$file_list
#$dir_root/0_mantra/breath.cfg
}
start(){
    mv /tmp/proxy /tmp/proxy${time}
}
finish(){
local cmd="cat -n /tmp/proxy | tail -5"
every 5 "$cmd"

cmd="proxy tree -L 1 -d"
every 4 "$cmd"
cmd="flite -t 'it is all about setting good standards'"
ever 5 "$cmd"
}
steps(){
    start
    print_state
        load


    let "counter_step=1"
        read_file "$file_list"
        finish

}

steps
set +o nounset

