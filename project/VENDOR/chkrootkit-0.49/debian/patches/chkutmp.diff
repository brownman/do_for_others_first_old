Fixed chkutmp parser, thanks to Aaron M. Ucko
--- a/chkutmp.c
+++ b/chkutmp.c
@@ -58,9 +58,9 @@ int main () { return 0; }
 #endif
 
 struct ps_line {
-    char ps_tty[UT_LINESIZE];
-    char ps_user[UT_NAMESIZE];
-    char ps_args[MAXLENGTH];
+    char ps_tty[UT_LINESIZE+2];
+    char ps_user[UT_NAMESIZE+2];
+    char ps_args[MAXLENGTH+2];
     int ps_pid;
 };
 struct utmp_line {
@@ -70,7 +70,7 @@ struct utmp_line {
 };
 static char *cmd[] = {
     "ps -ef -o \"tty,pid,ruser,args\"",	/* solaris */
-    "ps ax -o \"tty,pid,ruser,args\""	/* linux */
+    "ps axk \"tty,ruser,args\" -o \"tty,pid,ruser,args\""	/* linux */
 };
 int fetchps(struct ps_line *);
 int fetchutmp(struct utmp_line *);
@@ -113,6 +113,8 @@ int fetchps(struct ps_line *psl_p)
 		    s++;
 		for (x = 0; (*d++ = *s++) && x <= MAXLENGTH; x++)	/* cmd + args */
 		    ;
+		if (d[-2] == '\n')
+			d[-2] = '\0';
 		i++;
 		curp++;
 	    }
@@ -202,7 +204,7 @@ int main(int argc, char *argv[])
 		       "CMD");
 		hdr_prntd = 1;
 	    }
-	    printf("! %-9s %7d %-6s %s", ps_l[h].ps_user,
+	    printf("! %-9s %7d %-6s %s\n", ps_l[h].ps_user,
 		   ps_l[h].ps_pid, ps_l[h].ps_tty, ps_l[h].ps_args);
 	}
     }
