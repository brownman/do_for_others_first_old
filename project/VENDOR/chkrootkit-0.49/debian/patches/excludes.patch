Author: Francois Marier <francois@debian.org>
Description: add the ability to exclude specific files/directories from the checks
--- a/README
+++ b/README
@@ -123,6 +123,8 @@
          -d                debug
          -q                quiet mode
          -x                expert mode
+         -e                exclude known false positive files/dirs, quoted,
+                           space separated, READ WARNING IN README
          -r dir            use dir as the root directory
          -p dir1:dir2:dirN path for the external commands used by chkrootkit
          -n                skip NFS mounted dirs
@@ -181,6 +183,31 @@
 
    # ./chkrootkit -r /mnt
 
+ Sometimes the test for dot files in system directories will report
+ false positives for legitimate files. It has been argued that while
+ chkrootkit could be made to ignore these false positives, that might
+ result in attackers deliberately using those names in order to avoid
+ detection. For that reason chkrootkit does not exclude any false
+ positives by default. However, many people use chkrootkit as a
+ daily cron job, and having these false positives means that the
+ administrator gets daily emails reporting these files. This probably
+ would result in the administrator:
+   A) not checking those files each time they were reported, which
+      means than an attacker could still use those names to avoid
+      detection
+   B) getting into the habit of deleting the reports without looking
+      closely at them, which means they are more likely to miss a real
+      problem
+ Because the above would result in less security, there is support for
+ excluding files, using the -e flag, for example:
+
+   # ./chkrootkit -e '/lib/init/rw/.mdadm /lib/init/rw/.ramfs'
+
+ WARNING: by using this option you are giving attackers a way to avoid
+ detection! Make absolutely sure that these are truly false positives
+ and do a periodic check of any excluded files to make sure they are
+ still the legitimate files you think they are.
+
 
  7. Output Messages
  ------------------
--- a/chkrootkit
+++ b/chkrootkit
@@ -651,27 +651,43 @@ etc/ld.so.hash sbin/init.zk usr/lib/in.h
       echo ${files}
    fi
 
-   ### HiDrootkit
-   if [ "${QUIET}" != "t" ]; then printn \
-      "Searching for HiDrootkit's default dir... "; fi
-   if [ -d ${ROOTDIR}var/lib/games/.k ]
-   then
-      echo "Possible HiDrootkit installed"
+lookfor_rootkit() {
+   rkname=$1; files=$2; dirs=$3; # file/directory names cannot have whitespace
+   if [ "${QUIET}" != "t" ]; then \
+      printn "Searching for rootkit $rkname's default files... "; fi
+
+   bad="";
+   for f in $files ; do
+       if [ -r ${ROOTDIR}${f} ]; then
+	   for exclude in $EXCLUDES; do
+	       if [ /${f} = $exclude ]; then continue 2; fi
+	   done
+	   bad="$bad ${ROOTDIR}$f";
+       fi
+   done
+   for d in $dirs ; do
+       if [ -d ${ROOTDIR}${d} ]; then
+	   for exclude in $EXCLUDES; do
+	       if [ /${d} = $exclude ]; then continue 2; fi
+	   done
+	   bad="$bad ${ROOTDIR}$d";
+       fi
+   done
+   if [ "$bad" != "" ]; then
+       echo "Possible $rkname rootkit installed:"
+       echo "$bad"
    else
-      if [ "${QUIET}" != "t" ]; then echo "nothing found"; fi
+       if [ "${QUIET}" != "t" ]; then echo "nothing found"; fi
    fi
+}
+
+   ### HiDrootkit
+
+   lookfor_rootkit "HiDrootkit" "" "var/lib/games/.k"
 
    ### t0rn
-   if [ "${QUIET}" != "t" ]; then printn\
-      "Searching for t0rn's default files and dirs... "; fi
-   if [ -f ${ROOTDIR}etc/ttyhash -o -f ${ROOTDIR}sbin/xlogin -o \
-        -d ${ROOTDIR}usr/src/.puta  -o -r ${ROOTDIR}lib/ldlib.tk -o \
-        -d ${ROOTDIR}usr/info/.t0rn ]
-   then
-      echo "Possible t0rn rootkit installed"
-   else
-      if [ "${QUIET}" != "t" ]; then echo "nothing found"; fi
-   fi
+   lookfor_rootkit "t0rn" "etc/ttyhash sbin/xlogin lib/ldlib.tk" \
+       "usr/src/.puta usr/info/.t0rn"
 
    ### t0rn v8
    if [ "${QUIET}" != "t" ]; then \
@@ -688,47 +704,20 @@ etc/ld.so.hash sbin/init.zk usr/lib/in.h
    fi
 
    ### Lion Worm
-   if [ "${QUIET}" != "t" ]; then \
-      printn "Searching for Lion Worm default files and dirs... "; fi
-   if [ -d ${ROOTDIR}usr/info/.torn -o -d ${ROOTDIR}dev/.lib -o \
-        -f ${ROOTDIR}bin/in.telnetd -o -f ${ROOTDIR}bin/mjy ]
-   then
-         echo "Possible Lion worm installed"
-   else
-      if [ "${QUIET}" != "t" ]; then echo "nothing found"; fi
-   fi
+   lookfor_rootkit "Lion" "bin/in.telnetd bin/mjy" "usr/info/.torn dev/.lib"
 
    ### RSHA rootkit
-   if [ "${QUIET}" != "t" ]; then \
-      printn "Searching for RSHA's default files and dir... "; fi
-
-   if [ -r "${ROOTDIR}bin/kr4p" -o -r "${ROOTDIR}usr/bin/n3tstat" \
--o -r "${ROOTDIR}usr/bin/chsh2" -o -r "${ROOTDIR}usr/bin/slice2" \
--o -r "${ROOTDIR}usr/src/linux/arch/alpha/lib/.lib/.1proc" \
--o -r "${ROOTDIR}etc/rc.d/arch/alpha/lib/.lib/.1addr" \
--o -d "${ROOTDIR}etc/rc.d/rsha" \
--o -d "${ROOTDIR}etc/rc.d/arch/alpha/lib/.lib" ]
-   then
-      echo "Possible RSHA's rootkit installed"
-   else
-      if [ "${QUIET}" != "t" ]; then echo "nothing found"; fi
-   fi
+   lookfor_rootkit "RSHA" "bin/kr4p usr/bin/n3tstat usr/bin/chsh2 \
+       usr/bin/slice2 usr/src/linux/arch/alpha/lib/.lib/.1proc \
+       etc/rc.d/arch/alpha/lib/.lib/.1addr" "etc/rc.d/rsha \
+       etc/rc.d/arch/alpha/lib/.lib"
 
    ### RH-Sharpe rootkit
-   if [ "${QUIET}" != "t" ]; then \
-      printn "Searching for RH-Sharpe's default files... "; fi
-
-   if [ -r "${ROOTDIR}bin/lps" -o -r "${ROOTDIR}usr/bin/lpstree" \
--o -r "${ROOTDIR}usr/bin/ltop" -o -r "${ROOTDIR}usr/bin/lkillall" \
--o -r "${ROOTDIR}usr/bin/ldu" -o -r "${ROOTDIR}usr/bin/lnetstat" \
--o -r "${ROOTDIR}usr/bin/wp" -o -r "${ROOTDIR}usr/bin/shad" \
--o -r "${ROOTDIR}usr/bin/vadim" -o -r "${ROOTDIR}usr/bin/slice" \
--o -r "${ROOTDIR}usr/bin/cleaner" -o -r "${ROOTDIR}usr/include/rpcsvc/du" ]
-   then
-      echo "Possible RH-Sharpe's rootkit installed"
-   else
-      if [ "${QUIET}" != "t" ]; then echo "nothing found"; fi
-   fi
+   lookfor_rootkit "RH-Sharpe" "bin/lps usr/bin/lpstree	\
+	usr/bin/ltop usr/bin/lkillall usr/bin/ldu		\
+	usr/bin/lnetstat usr/bin/wp usr/bin/shad		\
+	usr/bin/vadim usr/bin/slice usr/bin/cleaner		\
+	usr/include/rpcsvc/du" ""
 
    ### ark rootkit
    if [ "${QUIET}" != "t" ]; then printn \
@@ -759,8 +748,24 @@ etc/ld.so.hash sbin/init.zk usr/lib/in.h
           printn "The following suspicious files and directories were found:"
       fi
       echo
-      echo ${files}
-      echo ${dirs}
+
+       if [ -n "${EXCLUDES}" ]; then
+           for name in $files; do
+             for exclude in $EXCLUDES; do
+                   if [ $name = $exclude ]; then continue 2; fi
+               done
+               echo $name
+           done
+           for name in $dirs; do
+             for exclude in $EXCLUDES; do
+                   if [ $name = $exclude ]; then continue 2; fi
+               done
+               echo $name
+           done
+       else
+           echo ${files}
+           echo ${dirs}
+       fi
    fi
 
    ### LPD Worm
@@ -2669,6 +2674,9 @@ do
 
         -x)     EXPERT=t;;
 
+        -e)     shift
+                EXCLUDES="$1 $EXCLUDES";;
+
         -q)     QUIET=t
                 QUIET_ARG="-q"
                 ;;
@@ -2689,6 +2697,8 @@ Options:
         -d                debug
         -q                quiet mode
         -x                expert mode
+        -e                exclude known false positive files/dirs, quoted,
+                          space separated, READ WARNING IN README
         -r dir            use dir as the root directory
         -p dir1:dir2:dirN path for the external commands used by chkrootkit
         -n                skip NFS mounted dirs"
