# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
show_function_bashrc(){
    echo 'it is possible to cat only the desire function - to get remember of its args'
}
show_scripts(){
    green 'SHOW_SCRIPTS'
    if [ "$1" ];then
        dir=$1
        if [ -d $dir ];then
            color1 ":"
            color2 ":"
            color3 ":"
            color4 ":"
            ls -1 $dir | sed 's/.sh//g'
        else
            reason_of_death "no such dir" "$dir"
        fi
    else
        reason_of_death "no arg"
    fi
}

show_funcs(){
    green 'SHOW_FUNCS'
    local script=$0
    color1 ":"
    color2 ":"
    color3 ":"
    color4 ":"
    functions=`grep -h '()' $0 | cut -d '(' -f 1`
    #functions=`grep -h test_ $0 | cut -d '(' -f 1`
    for i in $functions; do
        # rm -rf $dir_base/tmp/*
        # $i
        echo "  $i"
    done
    #edit_self
}
edit(){
    green 'EDIT_SELF'
    echo 'clipboard updated!'
    echo $EDITOR $0  xsel --clipboard
}
show_dependencies(){
    green 'SHOW_DEPENDENCIES'
    cat $0 | grep dependencies
}
say_my_name(){
    local str=${FUNCNAME[1]}
    echo "function name is  - $str" | flite
}
show_my_name(){


    local str=''

    if [ $# -ne 0 ];then
        str=$1

        if [ "$str" = 'func' ];then


            echo -en "\t  $str::"
            echo -n '-------->'
            str=${FUNCNAME[1]}
            echo -e "\t\t\t\t\t $str ()"
        elif [ "$str" = 'script' ];then

            echo -en "\t$str::"
            echo -n '--->'
            #str=${BASH_SOURCE[1]}
            str=$0
            echo -e "\t\t\t\t $str"
        fi
    else
        reason_of_death 'no args'
    fi
}


about_self(){
    print_script
    #color2 'ABOUT FILE:'
    file=`basename $0`
    echo
    #echo "File: $file"
    if [ -f "$file" ];then
        str1=`cat $file | grep  help_1 | sed 's/_1//g'`
        str2=`cat $file | grep  example_1 | sed 's/_1//g'`
        str3=`cat $file | grep  url: | sed 's/#url://g'`
        

        echo -e "\t\t$str1"
        echo -e "\t\t$str2"
        print_line
        echo
        #print_note 'Imagine that in 1 minute - you will be much Smarter'
        echo
        sleep1 1 
        echo 
        sleep1 1
        print_line
        echo
        cmd="$BROWSER $str3"
        every "$cmd" "Think about interesting urls.." 7
        print_line
        echo 
        echo
        echo
    else
        reason_of_death 'no such file' "$file"
    fi
} 

random1(){
    if [ $# -eq 1 ];then
        num=$1
        let "r = $RANDOM % $num"
        #green "r = $r"
        #counter=$r
        #let "reminder = $counter % 4"
        #echo1 "the reminder is: $reminder"
        return $r
    else
        reason_of_death 'no arguments - no integer'
    fi
}



every(){
    #    print_func
    if [ $# -gt 1 ];then



        cmd="$1"
        msg="$2"
        num=${3:-5}
        random1 $num
        res=$?
        if [ $res -eq 0 ];then
            commander "$cmd"
        else
#                echo "0 < $res < $num) "
            #    echo "Skipping.."
            color2 'LIFE IS RANDOM'
            echo
            echo "$msg"
        fi
    else
        reason_of_death 'no arguments - no command'
    fi

}

export -f every
export -f random1
export -f show_dependencies
export -f show_funcs
export -f edit

export -f show_scripts


export -f say_my_name

