
parse_caller(){
    print_func
    str="$1"
    echo "caller: $str"
    local num=`echo "$str" | cut -d' ' -f1`
    local file=`echo "$str" | cut -d' ' -f3`
    cmd="$EDITOR $dir_root/$file +$num"
    update_clipboard "$cmd"
}
parse_primary(){
    print_func
    local all="$1"
    local str=`echo $all | sed 's/line /+/g'`
    color4 "PARSE IT:"
    echo "$str"
    str_to_arr "$str"
    #we have: arr
    num="${#arr[@]}"
    exe="${arr[0]}"
    line="${arr[1]}"
    line=`remove_trailing "$line"`
    error="${arr[2]}"
    error_code="${arr[3]}"
    blue 'Assume:'
    echo -e "\t\tarray size: $num"
    echo -e "\t\texe: $exe"
    echo -e "\t\tline: |$line|"
    echo -e "\t\terror: $error"
    echo -e "\t\terror+code: $error_code"

    notify-send "$error" "$error_code"
    cmd="$EDITOR $dir_root/$exe $line" 
    update_clipboard "$cmd"

}
update_clipboard(){
    print_func
    if [ $# -eq 1  ];then
    local cmd="$1"
    notify-send 'clipboard updated' "$cmd"
    echo "$cmd"
    xsel "$cmd"
fi
}

export -f parse_caller
export -f parse_primary
export -f update_clipboard

