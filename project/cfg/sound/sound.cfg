translate(){
    print_func
    local sentance="${1:-dog}"
    local lang="${2:-ru}"
    cmd="$wrapper_sh $single_sh translation $lang $sentance"
    commander "$cmd" 
}



speak(){
    local    line="$1"
    local    to_translate=${2:-$TRANSLATE}
    if [ "$to_translate" = true ];then
        speller "$line"
        result=$?
        if [ $result -eq 0 ];then
            translate "$line" "$LANG"

        else
            print_error 'spelling error'
        fi
    else
        notify-send "$line" & 
        if [ "$mute" = false ];then

            echo "$line" | /usr/bin/flite -voice slt &
            sleep 1
            echo "$line" | /usr/bin/flite -voice kal &
            sleep 1
            echo "$line" | /usr/bin/flite -voice awb &
        fi

    fi
}

speller(){
    print_func
    local result=0
    if [  $# -eq 1 ];then
        local str="$1"
        local res=`echo "$str" |  aspell -a | grep  ','`
        if [  "$res" != '' ];then
result=1
           # echo "$res"
           # notify-send "$res"
           # flite 'spelling error'
           # echo "$str"
#            let 'result=1'
        fi
    else
        reason_of_death 'no arguments - no string to translate'
    fi
    return $result
    #assert_equal_str "speller: $str" 
}

export -f translate
export -f speak
export -f speller


