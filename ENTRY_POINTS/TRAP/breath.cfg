#!/bin/bash -e
clear
#depend_func: proxy()
print_color(){
    echo
}
proxy(){
    local args=( "$@" )
        local cmd="${args[@]}"
        echo "$cmd" >> /tmp/proxy
        eval "$cmd"
}

assertEquals(){
    [ $1 = $2 ] && { echo SUCCESS;} || { echo ERROR;}
}

pv(){
    local str="$@"

        local util=/usr/bin/pv
        local cmd="echo \"$str\" | $util -qL 10"
        echo "$cmd"
        eval "$cmd"

}

print_tag(){
    local tag="$1"
        local file="$2"
        local str=$( cat $file | head -4 | grep $tag )
        if [ -n "$str" ];then
            echo "[ $tag ]" 
                pv "$str"
        else
            echo "[ ERROR ]"
            echo 'empty tag:' "$tag" 
                echo "file: $file"

                local cmd="update_clipboard \"$tag\""

                proxy "$cmd"
                return 1
                fi

}
test_file(){
    local file=$1
        print_tag info "$file"
        print_tag question "$file"
        echo "[SUB-SHELL] running:"
        ( echo "[ test ] $file";eval "source $file" )
}

steps(){
    dir_self=`dirname $BASH_SOURCE`
        files=$dir_self/SH/*.sh
                            for file in $files;do
#ls -l $file
test_file $file
done
}



steps
