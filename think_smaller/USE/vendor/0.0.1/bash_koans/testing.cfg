# http://stackoverflow.com/questions/7650438/bash-funcname-value-expanding
# Required for the alias trick to work
shopt -s expand_aliases

export editor=${EDITOR:-vim}
# pretty printing functions
blue() { echo -en "\x1B[01;34m$1\x1B[0m "; }
green() { echo -en "\x1B[01;32m$1\x1B[0m"; }
red() { echo -en "\x1B[01;31m$1\x1B[0m "; }
#function print_notification { echo -en "\x1B[01;33m[*]\x1B[0m $@"; }
 
assertEquals() {
    echo "args: $@"
cmd="$BASH_ALIASES                $BASH_COMMAND                $BASH_REMATCH                $BASH_VERSION \
$BASH_ARGC                   $BASH_COMPLETION_COMPAT_DIR  $BASH_SOURCE                  \
$BASH_ARGV                   $BASH_GUI                    $BASH_SUBSHELL               \
$BASH_CMDS                   $BASH_LINENO                 $BASH_VERSINFO  "
    sleep 3
    str3="$1"
    str4="$2"

    
    local num3=$(echo "$str3" | wc -c)
    local num4=$(echo "$str4" | wc -c)
    if [ $num3 -gt 100 ];then
        echo 'too many chars'
    fi
    if [ $num4 -gt 100 ];then
        echo 'too many chars'
    fi

    if [ "$str3" = "$str4" ]; then
        
    echo '[OK]'
    else


print_color 31 ERROR 
        #        echo ''
        #notify-send ""
        #  red2 "  $1" "error"
        #echo "you have not yet reached enlightenment ..."

        #echo  "  expected '$3'" " got '$4'"
        echo  "expected:|$str3|" 
        echo  "got:     |$str4|"
        #echo "please meditate on the following code:"
    #    local filename=`grep  $1 $file_test`
        #  red2  "  $filename:$2"
        cmd="$editor $file_test +$2"


update_clipboard "$cmd"
        #        echo ''

#        flite 'updating clipboard..'
        # echo "you are now 10/291 koans and 2/36 lessons away from reaching enlightenment"



#        exiting
        # exit 1

#print_color 32 "OK\t"


    fi
}
# This allows us to get the name of the functionw where this function was called
# http://stackoverflow.com/questions/7650438/bash-funcname-value-expanding

export -f assertEquals
#export -f breakpoint_line_new
#alias assertEquals='assertEquals ${FUNCNAME} ${LINENO}'

#alias assertNotSame='assertNotSame ${FUNCNAME} ${LINENO}'
#alias breakpoint_line_new='breakpoint_line_new ${FUNCNAME} ${LINENO}'

