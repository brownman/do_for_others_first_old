#!/bin/bash 

set -o nounset

shopt -s expand_aliases
echo "[ caller ] $0"
clear1(){
str=`    caller`

    echo NO CLEAR
update_clipboard "gvim +${str}"
    }
#sleep 1
#vim: why error on ident?
#url: expand path: http://bash.cyberciti.biz/guide/Path_name_expansion
#depand: pv
#set -o nounset
#every 5 "present pv 'take a breath in other  workspace - it is crazingly easy!.... go on ! do it ! you can ! genius you ! yes you!'"
#every 5 "present pv 'easy first! set priorities !'"
alias breathE="vi $BASH_SOURCE"

trap_err(){
    echo trap err
    echo `caller`
    #sleep 2
}


proxy1 () 
{ 
    if [ $0 != bash ];then
        local str_caller=`caller`;
        local args=($@);
        local runner="${args[0]}";
        type "$runner" > /dev/null 2> /dev/null || { echo ignoring $cmd >> /tmp/proxy ;}

        local cmd="${args[@]}";

        eval "$cmd"
   else
        echo "[ skip ] $cmd" >> /tmp/proxy
    fi
}

install_trap(){
    echo install_trap
    trap trap_err ERR
    exec 2>/tmp/err
}
#alias proxy="proxy1"


assertEquals(){
    local arg1="$1"
    local arg2="$2"
    local res=0
    if [ "$arg1" = "$arg2" ];then
        res=0
    else
        res=1
    fi
    return $res
}


sourcing(){

#    proxy sleep 1
    local file=$1

    local dirname=$2

    local filename=`basename $file | cut -d'.' -f1`
    #   echo -en "\t\t\t $dirname /"
    # echo "shlvl: $SHLVL"
    #echo -e "\t\t\t[..] $filename"
    #    proxy sleep 1

    local cmd="source $file"
#echo "$cmd"
    if [ $0 = bash ];then
        eval "$cmd"
    else
        #before sourcing the file - we only want to test it in a sub-shell
        #( set -e; eval "$cmd" )
        local cmd_trap="trap trap_err ERR"

        #(          eval "$cmd_trap;$cmd"  )
        #  ( ;eval "$cmd" )

        #          eval "$cmd_trap &&  $cmd" 
        eval "$cmd"

    fi
    local res=$?
    if [ $res -ne 0 ];then
        echo   -n    X
    fi

}
print_tag(){
    local tag="$1"
    local str="$2"
    local slow=${3:-false}
    if [ "$slow" = true ] && [ $0 != bash ] ;then
        echo -ne "\t\t\t[ $tag ] "
        present pv $str
    else
        echo -ne "\t\t\t[ $tag ] "
        echo $str
    fi

}

#source_nested(){
#    local dir=$1
#    ( $dir/breath.cfg &)
#   source $dir/breath.cfg

#}
read_script_tag(){
    local file=$1
    local dir=`dirname $file`
    local tag=$2
    local mute=$3

    local top=5
    local str=$( cat $file | head -${top} | grep $tag | sed "s/#$tag://g" 2>/tmp/err )
    #   local res=$?
    #   echo "res: $?"
    if [ -n "$str" ] ;then

        print_tag "$tag" "$str" "$mute"

    else
        #       echo "$file" | xsel --clipboard 
        echo        "[ERROR] empty tag $tag"
        local cmd="vi $file"

        if [ $0 = bash ];then


proxy "update_clipboard \"$cmd\""
        echo "[CMD] $cmd"
            break
            else

echo proxy "update_clipboard \"$cmd\""
            exit
            fi
  #      echo proxy present_file /tmp/err

 #           proxy go_home
    fi
    #| tail -1 

}

start(){
    [ -f /tmp/proxy ] && { rm /tmp/proxy; }
}
present_mode(){
    echo -n "[ MODE ]"
#    proxy sleep 1
    echo "$MODE"
 #   proxy sleep 2
}
set_env(){
    #    export FLAG_SLOW=true
    export max_lines=5
    #dir_self=`dirname $BASH_SOURCE`
    dir_self="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
    #source $dir_self/quick.cfg
#    proxy sleep 3
    export ptrn="$dir_self/PENDING/*"


}
aliasing(){
    local file=$1
    local filename=`basename $file`
    local filename1=`basename $filename | cut -d'.' -f1 `
    local dir=`dirname $file`

    local dirname=`basename $dir`

    local cmd="export dir_${dirname}=\"$dir\""
    eval "$cmd"
    eval "alias ${dirname}E='vi $dir/breath.cfg'"

    eval "alias ${filename1}E='vi $file'"
    #    proxy "alias ${str}_steps='$file'"

    eval "alias cd_$dirname='cd $dir'"

    eval "alias sourcing_$dirname='sourcing $file'"
}
find_files(){

#    local ptrn1="*.cfg"

    local  dirs=$( ls -d  $ptrn )

    #    local str1=`dirname $BASH_SOURCE | rev | cut -d'/' -f1 | rev`
    #    echo -e "\t[$str1]"
while :;do
    for dir in $dirs;do
        local dirname=$( basename $dir )
        echo
        echo "[ $dirname ]"
        echo "----------------"
        #        ls -l $dir
        sourcing $dir/breath.cfg "$dirname"

#        local files=`ls $dir/BANK/breath.cfg`
        #        local  files=$( ls $dir/$ptrn1 )


    done
    break
done
}

present_file(){
    local file=$1
    echo -n '[ FILE ] '
    echo $file
    cat $file | tail -${max_lines}
}
finish(){
    local cmd="present_file /tmp/proxy"
    alias log="eval \"$cmd\""
}
steps(){
    #    proxy present_mode

#    proxy install_trap
     start
     set_env
     find_files
    #    proxy finish
}

#set -o nounset
steps
#alias proxy 1>/dev/null 2>/dev/null && { unalias proxy; }

#unalias proxy
