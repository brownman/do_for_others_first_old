


step1(){
    #info: load the file structure and export global vars
    #check:  [ -d "$dir_works" ]
    export dir_works=$dir_root/works
    export dir_workspace=$dir_root/WORKSPACE/$LOGNAME
    export dir_library=$dir_root/works/library/0.0.1
dir_target=$path/control
dir_private=$dir_target/private
#print_shlvl

}


#step2(){
    #info: sourcing files
    #check: type exiting 
    #type print_color 
#echo  
#    source $path/share/color.cfg
    #source $path/share/proxy.cfg
    #source $path/share/pid.cfg
    #source $path/share/inline.cfg
#}

#stp2(){
   #info load the next loader.cfg
#    $test_next 1>/dev/null
#    res=$?
#    if [ "$res" -eq 0 ];then
#        source $cfg_next
#    else
#        echo 'encounter an error while trying to test:' "$test_next"
#    fi
#}




step2(){
    #info: load aliases
    #check: alias aliasE
    source $dir_private/alias.cfg
}

stp2(){
    #info: show the priorities
    #check: [ -f "$file"  ] && [ -s "$file" ] && echo $file
    file=$dir_target/do.txt
if [ -f "$file" ];then
cat $file
else
    reason_of_death 'no such file' "$file"
fi
}
stp3(){
    #info: load the library
    #check: [ "$LIBRARY_LOADED" = true ]
    echo 'load the library:'
    $dir_library/test.sh 1>/dev/null
    res=$?
    if [ "$res" -eq 0 ];then
        echo 'trying to load the library:'
        source $dir_library/loader.cfg
    else
        echo 'encounter an error while trying to load the library:'
        echo "$dir_library/loader.cfg"
    fi
}



stp4(){
    #info: load couple of files from the library
    #check: type reason_of_death
    load library-defaults
    source $dir_private/defaults.cfg
}

stp5(){
    #info: present all sub-projects
    #check: declare -a 'dirs=( $dir_works/*/ )'; ls "${dirs[@]}/README.md"
    echo 'available sub projects:'
    tree -L 1 $dir_works
}


stp6(){
    load Self-commands
    source $dir_private/self.cfg
}

stp7(){
    echo 'productivity level is: '
    echo "$product_lvl"

    #source $dir_library/prompt.cfg

}


