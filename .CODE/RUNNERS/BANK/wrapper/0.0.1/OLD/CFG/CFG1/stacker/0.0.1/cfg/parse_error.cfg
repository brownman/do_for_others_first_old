#http://stackoverflow.com/questions/4956873/cutting-first-n-and-last-n-columns


parse_caller(){
    print_func
    str="$1"
    echo "caller: $str"
    local num=`echo "$str" | cut -d' ' -f1`
    local file=`echo "$str" | cut -d' ' -f3`
    cmd="$EDITOR $file +$num"
    update_clipboard "$cmd"
}
parse_primary(){
#set -o nounset
    print_func
    local all="$1"
    local str=`echo $all | sed 's/line /+/g'`
#print    color4 "PARSE IT:"

    arr=()
    echo "$str"
    str_to_arr "$str"


    num=0
    exe=''
    line=''
    error=''
    error_code=''

    num="${#arr[@]}"
if [ $num -gt 0 ];then
    exe="${arr[0]}"
fi
if [ $num -gt 1 ];then
    line="${arr[1]}"
    line=`remove_trailing "$line"`
fi
if [ $num -gt 2 ];then
    error="${arr[2]}"
fi
if [ $num -gt 3 ];then
    error_code="${arr[3]}"
fi
    print blue 'Assume:'
    echo -e "\t\tarray size: $num"
    echo -e "\t\texe: $exe"
    echo -e "\t\tline: |$line|"
    echo -e "\t\terror: $error"
    echo -e "\t\terror+code: $error_code"

    notify-send "$error" "$error_code"
    cmd="$EDITOR $exe $line" 
    update_clipboard "$cmd"
}
update_clipboard(){
    print_func
    if [ $# -gt 0  ];then
    local cmd="$1"
    notify-send 'clipboard updated' "$cmd"
    echo "$cmd"
    xsel "$cmd"
else
    reason_of_death 'no arguments'
fi
}

export -f parse_caller
export -f parse_primary
export -f update_clipboard
export -f parse_error
if [ "$TRAP" = true ];then
    trap 'parse_error $? $LINENO $BASH_LINENO "$BASH_COMMAND" $(printf "::%s" ${FUNCNAME[@]})'  ERR;
fi

