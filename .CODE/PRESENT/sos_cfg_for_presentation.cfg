#info: increase efficiency by using random stuff : like quick_rollet
#source "$dir_root/steps.sh" && { bash -c  "$dir_root/steps.sh" ;}

quick_rollet(){
    local cmd=''
        random 10
        local res=$?
        case $res in
        0)
        cmd="set -e"
        ;;
    1)
        cmd="set -u"
        ;;
    *)
        cmd="set +u;set +e"
        ;;

    esac
        every 5 "echo [r] $cmd"

        eval "$cmd"


}

export -f quick_rollet


print_color () 
{ 
    local color=${1:-34};
    shift;
    local str="${@:-X}";
    echo -e "\x1B[01;${color}m[*]\x1B[0m $str"
}

trap_err_prepare(){
    local file="${BASH_SOURCE[2]}"
        local cmd_goto="gvim $file"
        local funcname="${FUNCNAME[0]}"
        util=`which gxmessage`
        local cmd="$util -file /tmp/err -title $funcname -entrytext \"$cmd_goto\""
        echo "$cmd"
        proxy sleep 2
        eval "$cmd"
}

proxy(){

    local args=( $@ )

        [ $MODE_TRAP_IN_PROXY = true ] && { trap trap_err_prepare ERR ; }

    local runner="${args[0]}" 
        type $runner  1>/dev/null 2>/dev/null 
        local res=$?
        if [ $res -eq 0  ];then
            local cmd="${args[@]}"
                eval "$cmd" >> /tmp/proxy
                eval "$cmd" 2>/tmp/err | tee /tmp/out 
        else
            echo "[skipping] [cmd] $runner"
                fi
}
random () 
{ 
    local num=$1;
    let "r = $RANDOM % $num";
    return $r
}
trace(){
    local str="$@"
        echo $str >> /tmp/proxy
}
every () 
{ 
    local num=${1:-5};
    local cmd_do="$2";
    local cmd_else=${3:-''};
    if [ -z "$cmd_else" ]; then
        cmd_else="trace $cmd_do";
    fi;
    local res=0;
    if [ $num -eq 0 ]; then
        res=0;
    else
        random $num;
    fi;
    res=$?;
    if [ $res -eq 0 ]; then
        [        $num -ne  1 ] && {          echo "[cmd] $cmd_do" ;line_present WoW ! ..................................   1 / $num ;}
    sleep 1

        echo
        sleep 1
        eval "$cmd_do";
    res=$?
    else
        eval "$cmd_else";
    res=$?
        fi
        return $res
        sleep 3
}


file_present(){
    local file=$1
        local util=`which pv`
        local cmd="cat $file | xargs -0 echo | $util -qL 10"
        eval "$cmd"
}
line_present(){
    local line="$@"
        local util=`which pv`
        local cmd="echo $line | $util -qL 10"
        eval "$cmd"
}
sleep(){
    local mode_sleep=${MODE_SLEEP:-false}
    [ $mode_sleep = true ] && { /bin/sleep $1; }
}
export -f sleep
export -f file_present
export -f line_present
export -f proxy
export -f every
export -f trace
export -f random
export -f quick_rollet
export -f trap_err_prepare
export -f print_color
#echo "RES: $?"
