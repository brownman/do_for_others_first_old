#info
assert () 
{ 
    #delegate: returnin, exiting 
set -e
    local args=($@);
    local cmd="${args[@]}"
    #add_test "${args[@]}";
    let 'res=1';
    if [ "${#args[@]}" -eq 2 ]; then
        local action="${args[0]}";
        local item="${args[1]}";
        case "$action" in 
            dir_exist)
                [ -d "$item" ] && res=0
                ;;
            string_is_escaped)
                ( 1>/dev/null; echo "$cmd" | sed 's/"/\"/g' | grep '\\' ) && { res=0; }
                ;;

            file_exist)
                [ -f "$item" ] && res=0
                ;;
            caller_is)
                local funcname="${FUNCNAME[2]}"
                if [ "$item" = "$funcname" ] || [ "${item}1" = "$funcname" ];then
                    #                 { echo "OK caller is proxy" ;res=0; }
                    echo -n ''
                    res=0
                else
                    echo "ERROR - caller is not $item" ; 
                fi


                ;;

            file_has_content)
                [ -s "$item" ] && res=0
                ;;
            string_has_content)
                [ -n "$item" ] && res=0
                ;;
            func_exist)
                type $item 1>/dev/null && { res=0; }
                ;;

            *)

                echo "assertion not defined yet: $action"

                        go_home
                ;;
        esac;
    else

        echo "supply 2 args: $@";
        echo "[ AVAILABLE: cases]"
                cat $BASH_SOURCE | grep ')'


        go_home
    fi;


    if [ $res -eq 1 ];then
        register 
        echo "ASSERT: error action:$action item:$item"
        go_home
    else
        #trace "ASSERT: ok"
        echo -n '...'
    fi
    set +e
}

ensure(){
    #delegate: returnin, exiting 

    local args=($@);
    local cmd="${args[@]}"
    #add_test "${args[@]}";
    let 'res=1';
    if [ "${#args[@]}" -eq 2 ]; then
        local action="${args[0]}";
        local item="${args[1]}";
        case "$action" in 
            string_is_escaped)
                ( 1>/dev/null; echo "$cmd" | sed 's/"/\"/g' | grep '\\' ) && { res=0; }
                ;;

            *)
                echo "type of ensure - has not defined yet: $action "
                ;;
        esac;
    else
        echo echo "supply 2 args: $@";
    fi;

}


export -f assert
export -f ensure
