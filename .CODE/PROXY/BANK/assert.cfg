#info
assert () 
{ 
#delegate: returnin, exiting 
register 
local args=($@);
local cmd="${args[@]}"
#add_test "${args[@]}";
proxy sleep 1
let 'res=1';
if [ "${#args[@]}" -eq 2 ]; then
local action="${args[0]}";
local item="${args[1]}";
case "$action" in 
dir_exist)
[ -d "$item" ] && res=0
;;
string_is_escaped)
( 1>/dev/null; echo "$cmd" | sed 's/"/\"/g' | grep '\\' ) && { res=0; }
;;

file_exist)
[ -f "$item" ] && res=0
    ;;
caller_is_present)
[ "${FUNCNAME[2]}" = present ] && { res=0; }
    ;;
    file_has_content)
        [ -s "$item" ] && res=0
        ;;
    string_has_content)
        [ -n "$item" ] && res=0
        ;;
    func_exist)
        type $item 1>/dev/null && { res=0; }
    ;;

    *)
        present echo "assertion not defined yet: $action"
        go_home
        ;;
    esac;
else
    present echo "supply 2 args: $@";
go_home
    fi;


if [ $res -eq 1 ];then

    echo "ASSERT: error"
        go_home
else
#trace "ASSERT: ok"
    echo -n '...'
        fi
}


export -f assert
