#!/bin/bash -e
#set -o nounset
#info: useful tools
#pending: update the robot
#imagine: save the older
#later:   update layout.snippets+yad --> then hotkeys

#url: expand path: http://bash.cyberciti.biz/guide/Path_name_expansion
#depand: pv

shopt -s expand_aliases

alias proxy="proxy1"
read_script_tag(){
    local file=$1
    local tag=$2
    local top=5
    local str=$( cat $file | head -${top} | grep $tag | sed "s/#$tag://g" )
    if [ -n "$str" ];then
        #echo -ne "\t\t\t[ $tag ] "
        echo $str
    else "[ERROR] empty tag $tag"
        proxy "update_clipboard vi $file"
        proxy go_home
    fi
    #| tail -1 
}

start(){
    echo rm /tmp/proxy
}
set_env(){
    export max_lines=5
    #dir_self=`dirname $BASH_SOURCE`
    #dir_self="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

    #source $dir_self/quick.cfg
}
aliasing(){
    local dirname=$1
    local file=$2
    local filename=`basename $file | cut -d'.' -f1 `


    proxy  "alias ${filename}E='vi $file'"
    proxy "alias ${filename}_steps='$file'"

    proxy "alias cd_${dirname}='cd $dir'"
local     cmd="export single_${filename}=$file"
proxy "$cmd"
}
proxy1(){
    #zbanun
    local args=( "$@" )
    local cmd="${args[@]}"
    echo "$cmd" >> /tmp/proxy
    eval "$cmd"
}
read_tag1(){
    local file=$1
    local funcs=$2
    local tag=$3
    echo -e "\t\t[ $func ]"
    #alias "$func=\"echo $func\""


    local str=$( cat $file | grep $func -A 1 | grep $tag )
    if [ -n "$str" ];then
        echo -ne "\t\t\t[ $tag ] "
        echo $str
    else "[ERROR] empty tag $tag"
        proxy go_home
    fi
    #| tail -1 
}
find_files(){

    #local file_runner=${BASH_SOURCE:-$0}

    local dir_self=`where_am_i $file_runner`
    local ptrn="$dir_self/PENDING/*"
    local ptrn1="*.sh"

    local  dirs=$( ls -d  $ptrn )
    
#    local str1=`dirname $BASH_SOURCE | rev | cut -d'/' -f1 | rev`
#    echo -e "\t[$str1]"

    for dir in $dirs;do
local dirname=$( basename $dir )
echo "[ $dirname ]"
#        ls -l $dir

        local  files=$( ls $dir/$ptrn1 2>/dev/null )
        for file in $files;do
            #echo $file
            proxy aliasing $dirname $file
            #proxy source $file
            local str=`basename $file`
            echo -en "\t[$str] "
            #local funcs=$( cat $file | grep "(){" | sed 's/(){//g' )
            #for func in $funcs;do
            #	read_tag "$file" "$func" info
            #done

            read_script_tag "$file" info
        done

    done
}

present_file(){
    local file=$1
    echo -n '[ FILE ] '
    echo $file
    cat $file | tail -${max_lines}
}
finish(){
    local cmd="present_file /tmp/proxy"
    alias log="eval \"$cmd\""
}
steps(){

    file_runner=$BASH_SOURCE
#    echo runner is $file_runner
    proxy sleep 2
    proxy start
    proxy set_env
    proxy find_files
  #  proxy finish
}

set -o nounset
steps
unalias proxy
