shopt -s expand_aliases
print_line(){
    assert caller_is_present
echo '-----------------------'
}


trap_sigterm(){
    proxy print_color 34 SIGTERM
        present pv 'only if frustrated...'
        present pv 'random teacher in 5 seconds'
        proxy sleep 4
        present toilet 'love wisdom'
        ( xdg-open http://wiki.bash-hackers.org/ &)

}
#echo trap trap_sigterm SIGTERM
print_func(){
    echo "${FUNCNAME[0]}"
}
confirm(){
    if [ $# -gt 0 ];then

        local  args=( $@ )
            local cmd="${args[@]}"

            echo "[CONFIRM] $cmd"
            echo 'y/n ?'
            read answer
            if [ "$answer" = y ];then
                echo running
                    proxy sleep 2

                    proxy "$cmd"
            else
                proxy echo skipping
                    proxy sleep 2
                    proxy go_home
                    fi
    else
        echo no arguments
            fi
}
random_line(){
    local file=$1
        if [ -f $file ];then
            local num=$(       cat $file | wc -l ) 
                local str=$(cat $file | tail -${num} | head -1)
                echo "$str"
        else
            echo 'file not found: ' "$file"

                fi
}
#translate(){

#       http://www.commandlinefu.com/commands/matching/translate/dHJhbnNsYXRl/sort-by-votes
#    wget -qO- "http://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q=$1&langpair=$2|${3:-en}" | sed 's/.*"translatedText":"\([^"]*\)".*}/\1\n/'; } 


print_color () 
{ local color=$1
    shift
    echo -e "\x1B[01;${color}m[*]\x1B[0m $@ "
}
print_color_n () \
{ 
    local color=$1
    shift
    echo -en "\x1B[01;${color}m[*]\x1B[0m $@ "
}





print_shlvl(){
    echo "SHLVL: $SHLVL"
        proxy sleep 2
}



#info:   first list
#pending
who_am_i(){
    local filename=`basename $BASH_SOURCE`
        local dir=$( where_am_i )
        echo "$dir/$filename"
}
where_am_i(){
########### method1
#use: /bin/readline
#echo caller `    caller`
#echo
#    sleep 2
    local file=${1:-"${BASH_SOURCE[1]}"}
    local  rpath=$(readlink -m $file)
        local   rcommand=${rpath##*/}
    local  str_res=${rpath%/*}
########### method2
#use:bash builtin: caller
#local rpath=$( caller | cut -d' ' -f2 | xargs dirname )

local  dir_self="$( cd $str_res  && pwd )"
#local cmd="present notify-send 'where_am_i' '$dir_selfr'"
#proxy "$cmd"
echo "$dir_self"
}
just(){
print_color 33 "[JUST] " 
echo "$@"
echo   "$cmd_to_exit"
proxy "sleep 2"
eval "$cmd_to_exit"
}

random() 
{ 
#    print_func;

local num=$1
let "r = $RANDOM % $num";
return $r
}

every () 
{ 
local num=${1:-5};
local cmd_do="$2";
local cmd_else=${3:-''};
if [ -z "$cmd_else" ];then
cmd_else="trace $cmd_do"
fi
local res=0;
if [ $num -eq 0 ]; then
res=0;
else
random $num;
fi;
res=$?;
if [ $res -eq 0 ]; then
notify-send "life is random! :)" "boom/$num";
eval "$cmd_do";
else
eval "$cmd_else";
fi
}
register(){
    local str_caller="vi +$(caller)"
        update_clipboard "$str_caller"
        echo "$str_caller" >> /tmp/callers
}

pending(){
    echo "[PENDING]" "$@"
}
pv(){
    echo "$@" |  /usr/bin/pv -qL 10 
}
trace(){
    echo "$@" >> /tmp/proxy
}
#toilet(){
#    local args="$@"
#        local util=`which toilet`
#        local cmd="$util --gay"
#        eval "$cmd $args"
#
#}
#export -f toilet
#export -f assert
export -f register
export -f every
export -f random


export -f print_color

export -f print_color_n
export -f where_am_i
#export -f run_dir

#export -f util

#export -f callers
export -f pv
#export -f translate
export -f pending
export -f who_am_i
export -f register
export -f trace
export -f random_line
export -f confirm
export -f print_func
export -f print_shlvl
alias funcsE="vim $(  who_am_i )"
alias toilet="/usr/bin/toilet --gay"

#export -f trap_sigterm
quick_follow(){ local dir=$1;pushd "$( readlink -m $dir )"; }
export -f quick_follow
export -f print_line
