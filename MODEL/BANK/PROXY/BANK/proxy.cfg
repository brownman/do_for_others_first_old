#alias proxy 1>/dev/null  2>/dev/null && { unalias proxy; }
alias proxyE="vi $BASH_SOURCE"
install_trap(){
exec 2>/tmp/err
trap trap_err ERR
export -f trap_err_0
}


ensure_escaped(){
    local str="$@"
        local str1=$( echo "$str" | sed 's/"/\\"/g' )
(        echo "$str1" | grep '\\\\' 1>/dev/null )
#1>/dev/null 
        local res=$?
        if [ $res -eq 0 ];then
            echo "$str"
        else
            echo "$str1"
                fi
#                return $res
}
proxy(){
   local str_caller=`caller`;
    local args=($@);
    local runner="${args[0]}"
    type "$runner" > /dev/null 2> /dev/null || { 
        echo "[ERROR] command not found: $runner";
        go_home
    };

    local cmd="${args[@]}";
    cmd=$( ensure_escaped "$cmd" )

local msg="gvim +${str_caller} $cmd" 
    echo "$msg"    >> /tmp/proxy


eval "$cmd" 2>/tmp/err || { safe_alert "/tmp/err" "$msg" ; }    

}
safe_alert(){
    local file_err="$1"
local msg="$2"
    present "print_color 31 ERROR";echo;echo /tmp/err;cat /tmp/err; 
    local util=`which gxmessage`
local  cmd="$util -title 'trap_err' -entrytext "$msg" -file $file_err" ;
( which $util 1>/dev/null  2>/dev/null )  &&  { evall "$cmd"; } 

}
present () 
{ 
    local str_caller=`caller`;
    local args=($@);
    local runner="${args[0]}"
    type "$runner" > /dev/null 2> /dev/null || { 
    echo "[present() fallback] command not found: $runner" >> /tmp/proxy
        runner=echo
    };

    local cmd="${args[@]}";
    cmd=$( ensure_escaped "$cmd" )
    echo "gvim +${str_caller} $cmd" >> /tmp/proxy
    eval "$cmd"

                       
}

export -f proxy
export -f ensure_escaped
export -f present
export -f safe_alert
