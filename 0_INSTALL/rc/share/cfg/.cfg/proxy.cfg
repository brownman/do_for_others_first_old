xdg_open(){
notify_send xdg open

local link="$1"
#local dir_download="$DATA_DIR/www"
#mkdir $dir_download

#update_commander
#cache link
/usr/bin/xdg-open $link
}



gedit(){
    #return

    #update_commander
    notify_send 'gedit' 'exec'
    local util=/usr/bin/gedit 
    local file=$1
    if [ "$file" ];then


        is_valid $file
        local res=$?
        if [ $res -eq 1 ];then
            #flite 'edit file'
            cmd="exec $util $file"
            commander "$cmd"
        else
            notify_send1 'file not exist' "$file"
            messageYN1 "new file: $file" 'create' 
            res=$?
            if [ $res -eq $YES  ];then
                touch $file
                cmd="exec $util $file"
                detach "$cmd"
            fi
        fi

    fi
}

xterm1(){
    trace "DEBUG : $DEBUG"
    trace "xterm1() got: 1:$1 2:$2 3:$3 4:$4"
    local prog="/usr/bin/xterm"

    local cmd="$1"
    local msg="$2"

    local arg3="$3"
    local arg4="$4"
    local func='gxmessage'
    local run1="$func hi"
    trace "cmd,msg: $cmd $msg"

    (    $prog -e $cmd "$msg" "$arg3" "$arg4"   ) &
    trace 'xterm exiting ?'
}


tasker(){
    notify_send 'tasker' '!!!'
    #update_commander
    local args=( "$@" )
    #$(show_args "${args[@]}")
    #show_args
    local res1=$( $tasks_sh1 "${args[@]}")
    echo "$res1" #must echo for testing to work
    #assert_equal_str "$res1"
}
commander00(){
    local str="$@"
    local res=''
    local cmd="$str"
    if [ "$COMMANDER1" = 'true' ];then
    cmd=$(confirm 'commander1' 'command:' "$str")
    fi
    if [ "$cmd" = '' ];then
        flite 'exiting'
        exiting
    else
        trace "$res"
        res=$( eval "$cmd" )
    fi
    #trace  "$res2"
    echo "$res"
}
update_value(){

    local str="$1"

    local title="${2:-title}"
    local res=''
    local cmd="$str"
    #if [ "$COMMANDER1" = 'true' ];then
    cmd=$(confirm "$title" 'Recent:' "$str")
    #fi
    if [ "$cmd" = '' ];then
        flite 'exiting'
        exiting
    else
        trace "$res"
        res="$cmd"
        #$( echo "$cmd" )
    fi
    #trace  "$res2"
    echo "$res"
}
recent(){
local subject="$1"
local file=$DATA_DIR/log/$subject.log
local last_line=$( cat $file | head -1 | cut -d '|' -f2)
echo "$last_line"
}





commander0(){


    local input="$1"

    #sleep1 1
#trace 'commander1'

    #    local caller="${FUNCNAME[1]}"
    #    local lineno="${BASH_LINENO[0]}"
    #local filename="${BASH_SOURCE[1]}"
    #local callers="$0:$filename:$caller():$lineno"
    #

#update_commander
    if [ "$COMMANDER1" = 'true' ];then
        input=$(gxmessage $GXMESSAGE0 -entrytext "$input" -title 'commander:' "input:" )
    fi

    local res_str=$(  eval  "$input" )

    #local res_num=$?


    #assert_equal_str "$res_num" 2
    echo "$res_str"

    #return "$res_num"
    #$input
}


commander1(){
    #sleep1 1
#breakpoint
#eval "$1"
local res=$(eval $1)
echo "$res"
}

commander(){
    #sleep1 1
    #eval "$1"
#breakpoint
local res=$(eval $1)
echo "$res"
}
cat(){
    trace cat
local util=/bin/cat
local file=$1
is_valid "$file"
local res=$?
local res2=''
if [ $res -ne 1 ];then
    #breakpoint "invalid file:  $file"
    res2="empty file: $file"
    
else 
 res2=$(eval "$util" "$1")
fi
echo "$res2"

}
export -f cat
export -f commander1 
export -f commander 
export -f commander0 
export -f commander00 

export -f tasker 

export -f xterm1
export -f gedit


export -f xdg_open 

export -f update_value
export -f recent
